<?xml version="1.0"?>
<doc>
    <assembly>
        <name>/Users/laurent/Projects/Mercurial/Monobjc/dist/2.0/Monobjc.SM2DGraph</name>
    </assembly>
    <members>
        <member name="T:Monobjc.SM2DGraph.Properties.Resources">
            <summary>
            A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Monobjc.SM2DGraph.Properties.Resources.ResourceManager">
            <summary>
            Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Monobjc.SM2DGraph.Properties.Resources.Culture">
            <summary>
            Overrides the current thread's CurrentUICulture property for all
            resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Monobjc.SM2DGraph.SM2DGraph">
            <summary>
            Utility class to access SM2GGraphView framework.
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraph.SM2DGraphBarStyleAttributeName">
            <summary>
                <para>This is a key to be used in the -twoDGraphView:attributesForLineIndex: dictionary. If this key is present with any value, the line will be drawn as a series of bars instead of as a line.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraph.SM2DGraphDontAntialiasAttributeName">
            <summary>
                <para>This is a key to be used in the -twoDGraphView:attributesForLineIndex: dictionary. If this key is present with any value, the line will not be anti-aliased. This does not affect lines with the bar style.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraph.SM2DGraphLineSymbolAttributeName">
            <summary>
                <para>This is a key to be used in the -twoDGraphView:attributesForLineIndex: dictionary. The value represents the symbol that will be drawn at each data point. If this key is not present, no symbol will be drawn at the data points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraph.SM2DGraphLineWidthAttributeName">
            <summary>
                <para>This is a key to be used in the -twoDGraphView:attributesForLineIndex: dictionary. The value represents how thick the line will be drawn. If this key is not present, a default value of kSM2DGraph_Width_Default is used.</para>
            </summary>
        </member>
        <member name="T:Monobjc.SM2DGraph.SM2DGraphAxis">
            <summary>
                <para>When dealing with various properties of graph axis, these constants should be used.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphAxis.kSM2DGraph_Axis_Y">
            <summary>
                <para>The Y axis of the graph.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphAxis.kSM2DGraph_Axis_X">
            <summary>
                <para>The X axis of the graph.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphAxis.kSM2DGraph_Axis_Y_Right">
            <summary>
                <para>Y axis on the right side of the graph.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphAxis.kSM2DGraph_Axis_Y_Left">
            <summary>
                <para>Y axis on left side of graph - equal to kSM2DGraph_Axis_Y.</para>
            </summary>
        </member>
        <member name="T:Monobjc.SM2DGraph.SM2DGraphLineWidth">
            <summary>
                <para>Width of lines in the graph.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphLineWidth.kSM2DGraph_Width_None">
            <summary>
                <para>No line is drawn; symbols may still be drawn.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphLineWidth.kSM2DGraph_Width_Fine">
            <summary>
                <para>Lines are drawn a half pixel wide.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphLineWidth.kSM2DGraph_Width_Normal">
            <summary>
                <para>Lines are drawn one pixel wide.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphLineWidth.kSM2DGraph_Width_Wide">
            <summary>
                <para>Lines are drawn two pixels wide.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphLineWidth.kSM2DGraph_Width_3D">
            <summary>
                <para>Lines are drawn with a fake 3D look; lighter line above and darker line below main line.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphLineWidth.kSM2DGraph_Width_Default">
            <summary>
                <para>Default width of lines - equal to kSM2DGraph_Width_3D.</para>
            </summary>
        </member>
        <member name="T:Monobjc.SM2DGraph.SM2DGraphSymbolType">
            <summary>
                <para>Symbols that can be used on line style graphs. Does nothing for bar style lines.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_None">
            <summary>
                <para>Plain lines - no symbol marking points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_Triangle">
            <summary>
                <para>Open triangle marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_Diamond">
            <summary>
                <para>Open diamond marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_Circle">
            <summary>
                <para>Open circle marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_X">
            <summary>
                <para>X marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_Plus">
            <summary>
                <para>Plus symbol marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_FilledCircle">
            <summary>
                <para>Filled circle marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_Square">
            <summary>
                <para>Square marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_Star">
            <summary>
                <para>Star marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_InvertedTriangle">
            <summary>
                <para>Down-pointing triangle marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_FilledSquare">
            <summary>
                <para>Filled square marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_FilledTriangle">
            <summary>
                <para>Filled triangle marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_FilledDiamond">
            <summary>
                <para>Filled diamond marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_FilledInvertedTriangle">
            <summary>
                <para>Filled down-pointing triangle marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_FilledStar">
            <summary>
                <para>Filled star marking line points.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphSymbolType.kSM2DGraph_Symbol_Default">
            <summary>
                <para>Default symbol for lines - equal to kSM2DGraph_Symbol_None.</para>
            </summary>
        </member>
        <member name="T:Monobjc.SM2DGraph.SM2DGraphView">
            <summary>
            Managed wrapper for SM2DGraphView Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.SM2DGraph.SM2DGraphView" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.SM2DGraph.SM2DGraphView" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.#ctor(Monobjc.Cocoa.NSRect)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.SM2DGraph.SM2DGraphView" /> class.
            </summary>
            <param name="frameRect">
            </param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.SM2DGraph.SM2DGraphView" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.SM2DGraph.SM2DGraphView.SM2DGraphViewClass">
            <summary>
            Static field for a quick access to the SM2DGraphView class.
            </summary>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.BarWidth">
            <summary>
                <para>Returns the pixel width of a bar for bar graphs.  Useful for calculating graph insets if multiple line bar graphs are going to be displayed.</para>
                <para>Original signature is '+ (float)barWidth;'</para>
            </summary>
            <value>The width (in pixels) of a bar for bar graphs.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.AttributedTitle">
            <summary>
                <para>Returns the attributed string title drawn at the top of the graph.  The default title is blank.</para>
                <para>Original signature is '- (NSAttributedString *)attributedTitle;'</para>
            </summary>
            <value>The title of the graph as an attributed string.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.BackgroundColor">
            <summary>
                <para>Returns the color used to draw the background of the receiver. The default background color is white.</para>
                <para>Original signature is '- (NSColor *)backgroundColor;'</para>
            </summary>
            <value>The color used to draw the background.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.BorderColor">
            <summary>
                <para>Returns the color used to draw the border of the graph area. The default color is black.</para>
                <para>Original signature is '- (NSColor *)borderColor;'</para>
            </summary>
            <value>The color used to draw the border of the graph area.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.DataSource">
            <summary>
                <para>Returns the object that line data is pulled from.</para>
                <para>Original signature is '- (id)dataSource;'</para>
            </summary>
            <value>The data source object of the graph view.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.Delegate">
            <summary>
                <para>Returns the delegate object for the graph view.</para>
                <para>Original signature is '- (id)delegate;'</para>
            </summary>
            <value>The delegate object.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.DrawsGrid">
            <summary>
                <para>Returns YES if the receiver draws grid lines on the graph, NO if it doesn't. The default is NO.</para>
                <para>Original signature is '- (BOOL)drawsGrid;'</para>
            </summary>
            <value>YES if the receiver draws grid lines, NO if it doesn't.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.GraphPaperRect">
            <summary>
                <para>Returns the area the will be taken up by the graph itself.  Labels will be drawn outside of this rectangle, but within the view's area.</para>
                <para>Original signature is '- (NSRect)graphPaperRect;'</para>
            </summary>
            <value>	An NSRect in the receivers coordinates which is contains the actual graph area.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.GridColor">
            <summary>
                <para>Returns the color used to draw grid lines. The default color is blue.</para>
                <para>Original signature is ''</para>
            </summary>
            <value>The color used to draw grid lines.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.ImageOfView">
            <summary>
                <para>Returns an autoreleased image of the entire graph view. This image is filled with a white background first, so it should not have any transparent parts.</para>
                <para>Original signature is '- (NSImage *)imageOfView;'</para>
            </summary>
            <value>An NSImage object of the entire graph view.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.LiveRefresh">
            <summary>
                <para>Returns the state of the liveRefresh flag. This flag is only used in the -addDataPoint:toLineIndex: method to determine if the graph should be automatically redrawn or not. The default value is NO.</para>
                <para>Original signature is '- (BOOL)liveRefresh;'</para>
            </summary>
            <value>The state of the liveRefresh flag.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.Tag">
            <summary>
                <para>Returns the tag of the receiver.  This is an integer you can use for whatever you'd like.</para>
                <para>Original signature is '- (int)tag'</para>
            </summary>
            <value>The tag of the receiver.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SM2DGraphView.Title">
            <summary>
                <para>Returns the title drawn at the top of the graph.  The default title is blank.</para>
                <para>Original signature is '- (NSString *)title;'</para>
            </summary>
            <value>The title of the graph.</value>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.AddDataPointToLineIndex(Monobjc.Cocoa.NSPoint,System.UInt32)">
            <summary>
                <para>Adds a point to the end of a specific line's data. The data must have either been nil previously, returned as a NSMutableArray by the dataSources -twoDGraphView:dataForLineIndex: method, or returned as a NSMutableData by the dataSources -twoDGraphView:dataObjectForLineIndex: method. The graph is scheduled for redrawing if the liveRefresh flag is set for the view. This can be used for incremental graphing, such as when each point requires significant calculation.</para>
                <para>Original signature is '- (void)addDataPoint:(NSPoint)inPoint toLineIndex:(unsigned int)inLineIndex;'</para>
            </summary>
            <param name="inPoint">A point to add to the end of the line's data.</param>
            <param name="inLineIndex">The zero based index of the line to add to.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.AxisInsetForAxis(Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Returns the pixel inset from the edge of the graph paper area to start the axis range. The default is zero.</para>
                <para>Original signature is '- (float)axisInsetForAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="inAxis">The axis to return.</param>
            <returns>The number of pixels to inset the line range.</returns>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.ConvertPointFromViewToLineIndex(Monobjc.Cocoa.NSPoint,Monobjc.Cocoa.NSView,System.UInt32)">
            <summary>
                <para>Converts a point from a given window/view coordinate system to a point in the coordinate system of a given line on the graph. For example, if the x range values for a line are from -10.0 to +10.0 the returned point will be in this range.</para>
                <para>Original signature is '- (NSPoint)convertPoint:(NSPoint)inPoint fromView:(NSView *)inView toLineIndex:(unsigned int)inLineIndex;'</para>
            </summary>
            <param name="inPoint">The point to be converted.</param>
            <param name="inView">The inPoint parameter is in this view's coordinate system. A value of nil means the window's coordinate system.</param>
            <param name="inLineIndex">Zero based index of a line displayed on the graph.</param>
            <returns>The point after conversion to the appropriate line's scale.</returns>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.DrawsLineAtZeroForAxis(Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Can draw a straight line at zero for the first line. This is useful if your range goes both above and below zero, and zero does not land on a standard grid line. The default is NO.</para>
                <para>Original signature is '- (BOOL)drawsLineAtZeroForAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="inAxis">The axis to return.</param>
            <returns>YES if drawing a straight line at zero for the first line.</returns>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.LabelForAxis(Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Returns the axis label for an axis. The default is no label (nil).</para>
                <para>Original signature is '- (NSString *)labelForAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="inAxis">The axis to return.</param>
            <returns>An autoreleased string or nil.</returns>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.NumberOfMinorTickMarksForAxis(Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Returns the number of minor tick marks between each major tick mark for an axis. The default is no minor tick marks.</para>
                <para>Original signature is '- (int)numberOfMinorTickMarksForAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="inAxis">The axis to count.</param>
            <returns>The number of minor tick marks for an axis.</returns>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.NumberOfTickMarksForAxis(Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Returns the number of major tick marks for an axis. The default is no tick marks.</para>
                <para>Original signature is '- (int)numberOfTickMarksForAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="inAxis">The axis to count.</param>
            <returns>The number of major tick marks for an axis.</returns>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.RefreshDisplay(Monobjc.Id)">
            <summary>
                <para>Simple cover method that calls -reloadData, then -reloadAttributes.</para>
                <para>Original signature is '- (IBAction)refreshDisplay:(id)sender;'</para>
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.ReloadAttributes">
            <summary>
                <para>Reloads all line attributes from the datasource and schedules the graph for redrawing. The line data points are not reloaded.</para>
                <para>Original signature is '- (void)reloadAttributes;'</para>
            </summary>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.ReloadAttributesForLineIndex(System.UInt32)">
            <summary>
                <para>Reloads a specific line's attributes from the datasource and schedules the graph for redrawing. The line data points are not reloaded.</para>
                <para>Original signature is '- (void)reloadAttributesForLineIndex:(unsigned int)inLineIndex;'</para>
            </summary>
            <param name="inLineIndex">The zero based index of the line to reload.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.ReloadData">
            <summary>
                <para>Reloads all line data from the datasource and schedules the graph for redrawing.</para>
                <para>Original signature is '- (void)reloadData;'</para>
            </summary>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.ReloadDataForLineIndex(System.UInt32)">
            <summary>
                <para>Reloads a specific line's data from the datasource and schedules the graph for redrawing.</para>
                <para>Original signature is '- (void)reloadDataForLineIndex:(unsigned int)inLineIndex;'</para>
            </summary>
            <param name="inLineIndex">The zero based index of the line to reload.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.SetAxisInsetForAxis(System.Single,Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Sets the pixel inset from the edge of the graph paper area to start the axis range. The default is zero.</para>
                <para>Original signature is '- (void)setAxisInset:(float)inInset forAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="inInset">The number of pixels to inset the line range.</param>
            <param name="inAxis">The axis to change.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.SetDrawsLineAtZeroForAxis(System.Boolean,Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Can draw a straight line at zero for the first line. This is useful if your range goes both above and below zero, and zero does not land on a standard grid line. The default is NO.</para>
                <para>Original signature is '- (void)setDrawsLineAtZero:(BOOL)inNewValue forAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="inNewValue">Set to YES if you want to draw a straight line at zero for the first line.</param>
            <param name="inAxis">The axis to change.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.SetLabelForAxis(Monobjc.Cocoa.NSString,Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Sets the axis label for an axis. The default is no label (nil).</para>
                <para>Original signature is '- (void)setLabel:(NSString *)inNewLabel forAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="inNewLabel">The new label. If nil, any existing label is removed.</param>
            <param name="inAxis">The axis to label.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.SetNumberOfMinorTickMarksForAxis(System.Int32,Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Sets the number of minor tick marks between each major tick mark for an axis. The default is no minor tick marks.</para>
                <para>Original signature is '- (void)setNumberOfMinorTickMarks:(int)count forAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="count">The number of minor tick marks between major tick marks.</param>
            <param name="inAxis">The axis to change.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.SetNumberOfTickMarksForAxis(System.Int32,Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Sets the number of major tick marks for an axis. The default is no tick marks.</para>
                <para>Original signature is '- (void)setNumberOfTickMarks:(int)count forAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="count">The number of major tick marks. Should not be one.</param>
            <param name="inAxis">The axis to change.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.SetTickMarkPositionForAxis(Monobjc.Cocoa.NSTickMarkPosition,Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Sets the position to draw tick marks for an axis. The default is <see cref="F:Monobjc.Cocoa.NSTickMarkPosition.NSTickMarkBelow" /> and <see cref="F:Monobjc.Cocoa.NSTickMarkPosition.NSTickMarkRight" />. Note: Currently, this setting is remembered but does nothing.</para>
                <para>Original signature is '- (void)setTickMarkPosition:(NSTickMarkPosition)position forAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="position">The position to draw tick marks.</param>
            <param name="inAxis">The axis to change.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.TickMarkPositionForAxis(Monobjc.SM2DGraph.SM2DGraphAxis)">
            <summary>
                <para>Returns the position to draw tick marks for an axis. The default is NSTickMarkBelow and NSTickMarkRight. Note: Currently, this setting is remembered but does nothing.</para>
                <para>Original signature is '- (NSTickMarkPosition)tickMarkPositionForAxis:(SM2DGraphAxisEnum)inAxis;'</para>
            </summary>
            <param name="inAxis">The axis to return.</param>
            <returns>The position to draw tick marks for an axis.</returns>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.EncodeWithCoder(Monobjc.Cocoa.NSCoder)">
            <summary>
                <para>Encodes the receiver using a given archiver.</para>
                <para>Original signature is '- (void)encodeWithCoder:(NSCoder *)encoder'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
            <param name="encoder">An archiver object.</param>
            <returns>self, initialized using the data in decoder.</returns>
        </member>
        <member name="M:Monobjc.SM2DGraph.SM2DGraphView.InitWithCoder(Monobjc.Cocoa.NSCoder)">
            <summary>
                <para>Returns an object initialized from data in a given unarchiver.</para>
                <para>Original signature is '- (id)initWithCoder:(NSCoder *)decoder'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
            <param name="decoder">An unarchiver object.</param>
            <returns>self, initialized using the data in decoder.</returns>
        </member>
        <member name="T:Monobjc.SM2DGraph.SMLabelPosition">
            <summary>
                <para>Constants to use with the <see cref="P:Monobjc.SM2DGraph.SMPieChartView.LabelPosition" /> property.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SMLabelPosition.SMLabelPositionNone">
            <summary>
                <para>Draw no labels.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SMLabelPosition.SMLabelPositionBelow">
            <summary>
                <para>Draw the labels below the pie.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SMLabelPosition.SMLabelPositionAbove">
            <summary>
                <para>Draw the labels above the pie.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SMLabelPosition.SMLabelPositionRight">
            <summary>
                <para>Draw the labels to the right of the pie.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SMLabelPosition.SMLabelPositionLeft">
            <summary>
                <para>Draw the labels to the left of the pie.</para>
            </summary>
        </member>
        <member name="T:Monobjc.SM2DGraph.SMPieChartView">
            <summary>
            Managed wrapper for SMPieChartView Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.SM2DGraph.SMPieChartView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.SM2DGraph.SM2DGraphView" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.SM2DGraph.SMPieChartView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.SM2DGraph.SM2DGraphView" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SMPieChartView.#ctor(Monobjc.Cocoa.NSRect)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.SM2DGraph.SMPieChartView" /> class.
            </summary>
            <param name="frameRect">
            </param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SMPieChartView.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.SM2DGraph.SM2DGraphView" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.SM2DGraph.SMPieChartView.SMPieChartViewClass">
            <summary>
            Static field for a quick access to the SMPieChartView class.
            </summary>
        </member>
        <member name="P:Monobjc.SM2DGraph.SMPieChartView.AttributedTitle">
            <summary>
                <para>Returns the attributed title of the pie chart. The default is no title (nil).</para>
                <para>Original signature is '- (NSAttributedString *)attributedTitle;'</para>
            </summary>
            <value>An autoreleased string or nil.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SMPieChartView.BackgroundColor">
            <summary>
                <para>Returns the color used to draw the background of the receiver. The default background color is white.</para>
                <para>Original signature is '- (NSColor *)backgroundColor;'</para>
            </summary>
            <value>The color used to draw the background.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SMPieChartView.BorderColor">
            <summary>
                <para>Returns the color used to draw the border of each slice. The default color is black.</para>
                <para>Original signature is '- (NSColor *)borderColor;'</para>
            </summary>
            <value>The color used to draw the border of each slice.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SMPieChartView.DataSource">
            <summary>
                <para>Returns the object that slice data is pulled from.</para>
                <para>Original signature is '- (id)dataSource;'</para>
            </summary>
            <value>The data source object of the pie view.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SMPieChartView.Delegate">
            <summary>
                <para>Returns the delegate object for the pie view.</para>
                <para>Original signature is '- (id)delegate;'</para>
            </summary>
            <value>The delegate object.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SMPieChartView.ExplodeDistance">
            <summary>
                <para>Returns the pixel offset from the center of the chart to draw exploded slices of the pie. The default is zero.</para>
                <para>Original signature is '- (float)explodeDistance;'</para>
            </summary>
            <value>The number of pixels to offset exploded parts of the pie.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SMPieChartView.ImageOfView">
            <summary>
                <para>Returns an autoreleased image of the entire chart view. This image is filled with a white background first, so it should not have any transparent parts.</para>
                <para>Original signature is '- (NSImage *)imageOfView;'</para>
            </summary>
            <value>An NSImage object of the entire chart view.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SMPieChartView.LabelPosition">
            <summary>
                <para>Returns the position of labels for the pie chart. The default is no labels.</para>
                <para>Original signature is '- (SMLabelPositionEnum)labelPosition;'</para>
            </summary>
            <value>The position of labels.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SMPieChartView.Tag">
            <summary>
                <para>Returns the tag of the receiver. This is an integer you can use for whatever you'd like.</para>
                <para>Original signature is '- (int)tag;'</para>
            </summary>
            <value>The tag of the receiver.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SMPieChartView.Title">
            <summary>
                <para>Returns the title of the pie chart. The default is no title (nil).</para>
                <para>Original signature is '- (NSString *)title'</para>
            </summary>
            <value>An autoreleased string or nil.</value>
        </member>
        <member name="P:Monobjc.SM2DGraph.SMPieChartView.TitlePosition">
            <summary>
                <para>Returns the position of the title. The default is <see cref="F:Monobjc.SM2DGraph.SMTitlePosition.SMTitlePositionBelow" />.</para>
                <para>Original signature is '- (SMTitlePosition)titlePosition;'</para>
            </summary>
            <value>The number of position to draw the title in.</value>
        </member>
        <member name="M:Monobjc.SM2DGraph.SMPieChartView.ConvertToSliceFromPointFromView(Monobjc.Cocoa.NSPoint,Monobjc.Cocoa.NSView)">
            <summary>
                <para>Converts a point from a given window/view coordinate system to a slice of the pie, or -1 if the click was not on a slice of the pie. For example, if there are two slices of the pie (left half and right half) and the user clicks on the left half, this would return 0.</para>
                <para>Original signature is '- (int)convertToSliceFromPoint:(NSPoint)inPoint fromView:(NSView *)inView;'</para>
            </summary>
            <param name="inPoint">The point to be converted.</param>
            <param name="inView">The inPoint parameter is in this view's coordinate system. A value of nil means the window's coordinate system.</param>
            <returns>The slice of the pie that was clicked on. If the point is not on a slice of pie, returns -1.</returns>
        </member>
        <member name="M:Monobjc.SM2DGraph.SMPieChartView.RefreshDisplay(Monobjc.Id)">
            <summary>
                <para>Simple cover method that calls -reloadData, then -reloadAttributes.</para>
                <para>Original signature is '- (IBAction)refreshDisplay:(id)sender;'</para>
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SMPieChartView.ReloadAttributes">
            <summary>
                <para>Reloads all slice attributes from the datasource and schedules the chart for redrawing. The slice data is not reloaded.</para>
                <para>Original signature is '- (void)reloadAttributes;'</para>
            </summary>
        </member>
        <member name="M:Monobjc.SM2DGraph.SMPieChartView.ReloadAttributesForSliceIndex(System.UInt32)">
            <summary>
                <para>Reloads a specific slice's attributes from the datasource and schedules the chart for redrawing. The slice data is not reloaded.</para>
                <para>Original signature is '- (void)reloadAttributesForSliceIndex:(unsigned int)inSliceIndex;'</para>
            </summary>
            <param name="inSliceIndex">The zero based index of the slice to reload.</param>
        </member>
        <member name="M:Monobjc.SM2DGraph.SMPieChartView.ReloadData">
            <summary>
                <para>Reloads all slice data from the datasource and schedules the chart for redrawing.</para>
                <para>Original signature is '- (void)reloadData;'</para>
            </summary>
        </member>
        <member name="M:Monobjc.SM2DGraph.SMPieChartView.EncodeWithCoder(Monobjc.Cocoa.NSCoder)">
            <summary>
                <para>Encodes the receiver using a given archiver.</para>
                <para>Original signature is '- (void)encodeWithCoder:(NSCoder *)encoder'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
            <param name="encoder">An archiver object.</param>
            <returns>self, initialized using the data in decoder.</returns>
        </member>
        <member name="M:Monobjc.SM2DGraph.SMPieChartView.InitWithCoder(Monobjc.Cocoa.NSCoder)">
            <summary>
                <para>Returns an object initialized from data in a given unarchiver.</para>
                <para>Original signature is '- (id)initWithCoder:(NSCoder *)decoder'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
            <param name="decoder">An unarchiver object.</param>
            <returns>self, initialized using the data in decoder.</returns>
        </member>
        <member name="T:Monobjc.SM2DGraph.SMTitlePosition">
            <summary>
                <para>Constants to use with the <see cref="P:Monobjc.SM2DGraph.SMPieChartView.TitlePosition" /> property.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SMTitlePosition.SMTitlePositionBelow">
            <summary>
                <para>Draw the title below the pie.</para>
            </summary>
        </member>
        <member name="F:Monobjc.SM2DGraph.SMTitlePosition.SMTitlePositionAbove">
            <summary>
                <para>Draw the title above the pie.</para>
            </summary>
        </member>
    </members>
</doc>
