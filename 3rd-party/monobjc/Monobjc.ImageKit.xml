<?xml version="1.0"?>
<doc>
    <assembly>
        <name>/Users/laurent/Projects/Mercurial/Monobjc/dist/2.0/Monobjc.ImageKit</name>
    </assembly>
    <members>
        <member name="T:Monobjc.ImageKit.Properties.Resources">
            <summary>
            A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.Properties.Resources.ResourceManager">
            <summary>
            Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.Properties.Resources.Culture">
            <summary>
            Overrides the current thread's CurrentUICulture property for all
            resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Monobjc.ImageKit.IKFilterBrowserPanel">
            <summary>
            Managed wrapper for IKFilterBrowserPanel Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKFilterBrowserPanel" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserPanel.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKFilterBrowserPanel" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserPanel.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKFilterBrowserPanel" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.ImageKit.IKFilterBrowserPanel.IKFilterBrowserPanelClass">
            <summary>
            Static field for a quick access to the IKFilterBrowserPanel class.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKFilterBrowserPanel.FilterName">
            <summary>
                <para>Returns the name of the filter that is currently selected in the filter browser.</para>
                <para>Original signature is '- (NSString*)filterName;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserPanel.FilterBrowserPanelWithStyleMask(System.UInt32)">
            <summary>
                <para>Creates a shared instance of the IKFilterBrowserPanel class.</para>
                <para>Original signature is '+ (id)filterBrowserPanelWithStyleMask:(unsigned int)styleMask;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="styleMask">A mask that specifies whether to use the default or brushed metal look for the window. You can select or deselect the NSTexturedBackgroundWindowMask style bit.</param>
            <returns>The shared instance.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserPanel.BeginSheetWithOptionsModalForWindowModalDelegateDidEndSelectorContextInfo(Monobjc.Cocoa.NSDictionary,Monobjc.Cocoa.NSWindow,Monobjc.Id,System.IntPtr,System.IntPtr)">
            <summary>
                <para>Displays the filter browser in a sheet—that is, a dialog that is attached to its parent window and must be dismissed by the user.</para>
                <para>Original signature is '- (void)beginSheetWithOptions:(NSDictionary*)inOptions modalForWindow:(NSWindow *)docWindow modalDelegate:(id)modalDelegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="inOptions">A dictionary of options that describe the configuration to use for the filter browser user interface. For the possible keys you can supply see “Filter Browser Option Keys” and the constant IKUISizeFlavor.</param>
            <param name="docWindow">The parent window for the dialog.</param>
            <param name="modalDelegate">The object that will invoke the selector didEndSelector when the filter browser session terminates.</param>
            <param name="didEndSelector">The selector to invoke when the filter browser session terminates.</param>
            <param name="contextInfo">Any data that must be passed as an argument to the delegate through didEndSelector after the filter browser session terminates.</param>
            <returns>A filter browser view that is configured as specified.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserPanel.BeginWithOptionsModelessDelegateDidEndSelectorContextInfo(Monobjc.Cocoa.NSDictionary,Monobjc.Id,System.IntPtr,System.IntPtr)">
            <summary>
                <para>Displays the filter browser in a new utility window, unless the filter browser is already open.</para>
                <para>Original signature is '- (void)beginWithOptions:(NSDictionary*)inOptions modelessDelegate:(id)modelessDelegate didEndSelector:(SEL)didEndSelector contextInfo:(void *)contextInfo;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="inOptions">A dictionary of options that describe the configuration to use for the filter browser user interface. For the possible keys you can supply see “Filter Browser Option Keys” and the constant IKUISizeFlavor.</param>
            <param name="modelessDelegate">The object that will invoke the selector didEndSelector when the filter browser session terminates.</param>
            <param name="didEndSelector">The selector to invoke when the filter browser session terminates.</param>
            <param name="contextInfo">Any data that must be passed as an argument to the delegate through didEndSelector after the filter browser session terminates.</param>
            <returns>A filter browser view that is configured as specified.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserPanel.FilterBrowserViewWithOptions(Monobjc.Cocoa.NSDictionary)">
            <summary>
                <para>Returns a view that contains a filter browser.</para>
                <para>Original signature is '- (IKFilterBrowserView*)filterBrowserViewWithOptions:(NSDictionary*)inOptions;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="inOptions">A dictionary of options that describe the configuration to use for the filter browser user interface. For the possible keys you can supply see “Filter Browser Option Keys” and the constant IKUISizeFlavor.</param>
            <returns>A filter browser view that is configured as specified.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserPanel.Finish(Monobjc.Id)">
            <summary>
                <para>Closes a filter browser view.</para>
                <para>Original signature is '- (void)finish:(id)sender;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="sender">The object that invokes the action, such as an OK or Cancel button.</param>
            <returns>Either NSOKButton if the user validates, or NSCancelButton if the user cancels.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserPanel.RunModalWithOptions(Monobjc.Cocoa.NSDictionary)">
            <summary>
                <para>Displays the filter browser in a modal dialog that must be dismissed by the user but that is not attached to a window.</para>
                <para>Original signature is '- (int)runModalWithOptions:(NSDictionary*)inOptions;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="inOptions">A dictionary of options that describe the configuration to use for the filter browser user interface. For the possible keys you can supply see “Filter Browser Option Keys” and the constant IKUISizeFlavor.</param>
            <returns>Either NSOKButton if the user validates, or NSCancelButton if the user cancels.</returns>
        </member>
        <member name="T:Monobjc.ImageKit.IKFilterBrowserView">
            <summary>
            Managed wrapper for IKFilterBrowserView Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKFilterBrowserView" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKFilterBrowserView" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserView.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKFilterBrowserView" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.ImageKit.IKFilterBrowserView.IKFilterBrowserViewClass">
            <summary>
            Static field for a quick access to the IKFilterBrowserView class.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKFilterBrowserView.FilterName">
            <summary>
                <para>Returns the name of the filter that is currently selected in the filter browser.</para>
                <para>Original signature is '- (NSString*)filterName;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterBrowserView.SetPreviewState(System.Boolean)">
            <summary>
                <para>Sets the preview state.</para>
                <para>Original signature is '- (void)setPreviewState:(BOOL)inState;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="inState">A state (YES or NO) that represents whether a preview is visible.</param>
        </member>
        <member name="T:Monobjc.ImageKit.IIKFilterCustomUIProvider">
            <summary>
            Managed wrapper for "IKFilterCustomUIProvider Protocol Reference" Objective-C protocol.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IIKFilterCustomUIProvider.ProvideViewForUIConfigurationExcludedKeys(Monobjc.Cocoa.NSDictionary,Monobjc.Cocoa.NSArray)">
            <summary>
                <para>Provides a custom view for a filter.</para>
                <para>Original signature is '-(IKFilterUIView*)provideViewForUIConfiguration:(NSDictionary*)inUIConfiguration excludedKeys:(NSArray*)inKeys'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="inUIConfiguration">A dictionary that specifies the size of the controls. Provide the key IKUISizeFlavor and one of the following values: IKUISizeMini, IKUISizeSmall, or IKUISizeRegular. For more information on these constants, see User Interface Options in CIFilter Image Kit Additions.</param>
            <param name="inKeys">An array of the input keys for which you do not want to provide a user interface. Pass nil if you want all input keys to be represented in the user interface.</param>
            <returns>An IKFilterUIView object or nil if the filter is unable to provide a view. If nil, the Image Kit framework will attempt to provide a user interface.</returns>
        </member>
        <member name="T:Monobjc.ImageKit.IKFilterUIView">
            <summary>
            Managed wrapper for IKFilterUIView Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterUIView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKFilterUIView" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterUIView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKFilterUIView" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterUIView.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKFilterUIView" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.ImageKit.IKFilterUIView.IKFilterUIViewClass">
            <summary>
            Static field for a quick access to the IKFilterUIView class.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKFilterUIView.Filter">
            <summary>
                <para>Returns the Core Image filter associated with the view.</para>
                <para>Original signature is '- (CIFilter *)filter'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKFilterUIView.ObjectController">
            <summary>
                <para>Returns the object controller for the bindings between the filter and its view.</para>
                <para>Original signature is '- (NSObjectController *)objectController'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterUIView.ViewWithFrameFilter(Monobjc.Cocoa.NSRect,Monobjc.Cocoa.CIFilter)">
            <summary>
                <para>Creates a view that contains controls for the input parameters of a filter.</para>
                <para>Original signature is '+ (id)viewWithFrame:(NSRect)frameRect filter:(CIFilter *)inFilter'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="frameRect">The rectangle that defines the area of the view.</param>
            <param name="inFilter">A Core Image filter. The view retains the filter.</param>
            <returns>An IKFilterUIView object that contains controls for the input parameters of the provided filter.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKFilterUIView.InitWithFrameFilter(Monobjc.Cocoa.NSRect,Monobjc.Cocoa.CIFilter)">
            <summary>
                <para>Initializes a view that contains controls for the input parameters of a filter.</para>
                <para>Original signature is '- (id)initWithFrame:(NSRect)frameRect filter:(CIFilter *)inFilter'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="frameRect">The rectangle that defines the area of the view.</param>
            <param name="inFilter">A Core Image filter. The view retains the filter.</param>
            <returns>The IKFilterUIView object initialized with controls for the input parameters of the provided filter.</returns>
        </member>
        <member name="T:Monobjc.ImageKit.IIKImageBrowserDataSource">
            <summary>
            Managed wrapper for "IKImageBrowserDataSource Protocol Reference" Objective-C protocol.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IIKImageBrowserDataSource.ImageBrowserGroupAtIndex(Monobjc.ImageKit.IKImageBrowserView,System.UInt32)">
            <summary>
                <para>Returns the group at the specified index.</para>
                <para>Original signature is '- (NSDictionary *) imageBrowser:(IKImageBrowserView *) aBrowser groupAtIndex:(NSUInteger) index;'</para>
            </summary>
            <param name="aBrowser">An image browser view.</param>
            <param name="index">The index of the group you want to retrieve.</param>
            <returns>A dictionary that defines the group. The keys in this dictionary can be any of the following constants: IKImageBrowserGroupStyle, IKImageBrowserGroupBackgroundColorKey, IKImageBrowserGroupTitleKey, and IKImageBrowserGroupRangeKey. For more information on these constants, see IKImageBrowserView Class Reference.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IIKImageBrowserDataSource.ImageBrowserItemAtIndex(Monobjc.ImageKit.IKImageBrowserView,System.UInt32)">
            <summary>
                <para>Returns an object for the item in an image browser view that corresponds to the specified index.</para>
                <para>Original signature is '- (id) imageBrowser:(IKImageBrowserView *) aBrowser itemAtIndex:(NSUInteger)index;'</para>
            </summary>
            <param name="aBrowser">An image browser view.</param>
            <param name="index">The index of the item you want to retrieve.</param>
            <returns>An IKImageBrowserItem object.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IIKImageBrowserDataSource.ImageBrowserMoveItemsAtIndexesToIndex(Monobjc.ImageKit.IKImageBrowserView,Monobjc.Cocoa.NSIndexSet,System.UInt32)">
            <summary>
                <para>Signals that the specified items should be moved to the specified destination.</para>
                <para>Original signature is '- (BOOL) imageBrowser:(IKImageBrowserView *) aBrowser moveItemsAtIndexes: (NSIndexSet *)indexes toIndex:(NSUInteger)destinationIndex;'</para>
            </summary>
            <param name="aBrowser">An image browser view.</param>
            <param name="indexes">The indexes of the items that should be reordered.</param>
            <param name="destinationIndex">The starting index of the destination the items should be moved to.</param>
            <returns>YES if successful; NO otherwise.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IIKImageBrowserDataSource.ImageBrowserRemoveItemsAtIndexes(Monobjc.ImageKit.IKImageBrowserView,Monobjc.Cocoa.NSIndexSet)">
            <summary>
                <para>Signals that a remove operation should be applied to the specified items.</para>
                <para>Original signature is '- (void) imageBrowser:(IKImageBrowserView *) aBrowser removeItemsAtIndexes:(NSIndexSet *) indexes;'</para>
            </summary>
            <param name="aBrowser">An image browser view.</param>
            <param name="indexes">The indexes of the items that should be removed.</param>
            <returns>The number of items written to the pasteboard.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IIKImageBrowserDataSource.ImageBrowserWriteItemsAtIndexesToPasteboard(Monobjc.ImageKit.IKImageBrowserView,Monobjc.Cocoa.NSIndexSet,Monobjc.Cocoa.NSPasteboard)">
            <summary>
                <para>Signals that a drag should begin.</para>
                <para>Original signature is '- (NSUInteger) imageBrowser:(IKImageBrowserView *) aBrowser writeItemsAtIndexes:(NSIndexSet *) itemIndexes toPasteboard:(NSPasteboard *)pasteboard;'</para>
            </summary>
            <param name="aBrowser">An image browser view.</param>
            <param name="itemIndexes">The indexes of the items that should be dragged.</param>
            <param name="pasteboard">The pasteboard to copy the items to.</param>
            <returns>The number of items written to the pasteboard.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IIKImageBrowserDataSource.NumberOfGroupsInImageBrowser(Monobjc.ImageKit.IKImageBrowserView)">
            <summary>
                <para>Returns the number of groups in an image browser view.</para>
                <para>Original signature is '- (NSUInteger) numberOfGroupsInImageBrowser:(IKImageBrowserView *) aBrowser;'</para>
            </summary>
            <param name="aBrowser">An image browser view.</param>
            <returns>The number of groups.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IIKImageBrowserDataSource.NumberOfItemsInImageBrowser(Monobjc.ImageKit.IKImageBrowserView)">
            <summary>
                <para>Returns the number of records managed by the data source object.</para>
                <para>Original signature is '- (NSUInteger) numberOfItemsInImageBrowser:(IKImageBrowserView *) aBrowser;'</para>
            </summary>
            <param name="aBrowser">An image browser view.</param>
            <returns>The number of records managed by the image browser view.</returns>
        </member>
        <member name="T:Monobjc.ImageKit.IIKImageBrowserDelegate">
            <summary>
            Managed wrapper for "IKImageBrowserDelegate Protocol Reference" Objective-C protocol.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IIKImageBrowserDelegate.ImageBrowserBackgroundWasRightClickedWithEvent(Monobjc.ImageKit.IKImageBrowserView,Monobjc.Cocoa.NSEvent)">
            <summary>
                <para>Performs custom tasks when the user right-clicks the image browser view background.</para>
                <para>Original signature is '- (void) imageBrowser:(IKImageBrowserView *) aBrowser backgroundWasRightClickedWithEvent:(NSEvent *) event;'</para>
            </summary>
            <param name="aBrowser">An image browser view.</param>
            <param name="evt">The event that invoked the method.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IIKImageBrowserDelegate.ImageBrowserCellWasDoubleClickedAtIndex(Monobjc.ImageKit.IKImageBrowserView,System.UInt32)">
            <summary>
                <para>Performs custom tasks when the user double-clicks an item in the image browser view.</para>
                <para>Original signature is '- (void) imageBrowser:(IKImageBrowserView *) aBrowser cellWasDoubleClickedAtIndex:(NSUInteger) index;'</para>
            </summary>
            <param name="aBrowser">An image browser view.</param>
            <param name="index">The index of the cell.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IIKImageBrowserDelegate.ImageBrowserCellWasRightClickedAtIndexWithEvent(Monobjc.ImageKit.IKImageBrowserView,System.UInt32,Monobjc.Cocoa.NSEvent)">
            <summary>
                <para>Performs custom tasks when the user right-clicks an item in the image browser view.</para>
                <para>Original signature is '- (void) imageBrowser:(IKImageBrowserView *) aBrowser cellWasRightClickedAtIndex:(NSUInteger) index withEvent:(NSEvent *) event;'</para>
            </summary>
            <param name="aBrowser">An image browser view.</param>
            <param name="index">The index of the cell.</param>
            <param name="evt">The event that invoked the method.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IIKImageBrowserDelegate.ImageBrowserSelectionDidChange(Monobjc.ImageKit.IKImageBrowserView)">
            <summary>
                <para>Performs custom tasks when the selection changes.</para>
                <para>Original signature is '- (void) imageBrowserSelectionDidChange:(IKImageBrowserView *) aBrowser;'</para>
            </summary>
            <param name="aBrowser">An image browser view.</param>
        </member>
        <member name="T:Monobjc.ImageKit.IIKImageBrowserItem">
            <summary>
            Managed wrapper for "IKImageBrowserItem Protocol Reference" Objective-C protocol.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IIKImageBrowserItem.ImageRepresentation">
            <summary>
                <para>Returns the image to display.</para>
                <para>Original signature is '- (id) imageRepresentation;'</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IIKImageBrowserItem.ImageRepresentationType">
            <summary>
                <para>Returns the representation type of the image to display.</para>
                <para>Original signature is '- (NSString *) imageRepresentationType;'</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IIKImageBrowserItem.ImageSubtitle">
            <summary>
                <para>Returns the display subtitle of the image.</para>
                <para>Original signature is '- (NSString *) imageSubtitle'</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IIKImageBrowserItem.ImageTitle">
            <summary>
                <para>Returns the display title of the image.</para>
                <para>Original signature is '- (NSString *) imageTitle;'</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IIKImageBrowserItem.ImageUID">
            <summary>
                <para>Returns a unique string that identifies the data source item.</para>
                <para>Original signature is '- (NSString *) imageUID;'</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IIKImageBrowserItem.ImageVersion">
            <summary>
                <para>Returns the version of the item.</para>
                <para>Original signature is '- (NSUInteger) imageVersion;'</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IIKImageBrowserItem.IsSelectable">
            <summary>
                <para>Returns whether this item is selectable.</para>
                <para>Original signature is '- (BOOL) isSelectable;'</para>
            </summary>
        </member>
        <member name="T:Monobjc.ImageKit.IKImageBrowserView">
            <summary>
            Managed wrapper for IKImageBrowserView Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageBrowserView" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageBrowserView" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageBrowserView" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.ImageKit.IKImageBrowserView.IKImageBrowserViewClass">
            <summary>
            Static field for a quick access to the IKImageBrowserView class.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.AllowsEmptySelection">
            <summary>
                <para>Returns whether an empty selection is allowed.</para>
                <para>Original signature is '- (BOOL) allowsEmptySelection;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.AllowsMultipleSelection">
            <summary>
                <para>Returns whether multiple selections are allowed.</para>
                <para>Original signature is '- (BOOL) allowsMultipleSelection;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.AllowsReordering">
            <summary>
                <para>Returns whether the user can reorder items.</para>
                <para>Original signature is '- (BOOL) allowsReordering;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.Animates">
            <summary>
                <para>Returns whether the receiver animates reordering and changes of the data source.</para>
                <para>Original signature is '- (BOOL) animates;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.CellSize">
            <summary>
                <para>Returns the cell size.</para>
                <para>Original signature is '- (NSSize) cellSize;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.CellsStyleMask">
            <summary>
                <para>Returns the appearance style mask for the cell.</para>
                <para>Original signature is '- (NSUInteger) cellsStyleMask;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.ConstrainsToOriginalSize">
            <summary>
                <para>Returns whether the receiver constrains the cell's image to its original size.</para>
                <para>Original signature is '- (BOOL) constrainsToOriginalSize;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.ContentResizingMask">
            <summary>
                <para>Returns the receiver’s content resizing mask, which determines how its content is resized while zooming.</para>
                <para>Original signature is '- (NSUInteger) contentResizingMask;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.DataSource">
            <summary>
                <para>Returns the data source of the receiver.</para>
                <para>Original signature is '- (id ) dataSource;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.Delegate">
            <summary>
                <para>Returns the delegate of the receiver.</para>
                <para>Original signature is '- (id) delegate;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.DraggingDestinationDelegate">
            <summary>
                <para>Returns the dragging destination delegate of the receiver.</para>
                <para>Original signature is '- (id) draggingDestinationDelegate;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.IndexAtLocationOfDroppedItem">
            <summary>
                <para>Returns the index of the cell where the drop operation occurred.</para>
                <para>Original signature is '- (NSUInteger) indexAtLocationOfDroppedItem;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.SelectionIndexes">
            <summary>
                <para>Returns the indexes of the selected cells.</para>
                <para>Original signature is '- (NSIndexSet *) selectionIndexes;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageBrowserView.ZoomValue">
            <summary>
                <para>Returns the current zoom value.</para>
                <para>Original signature is '- (float) zoomValue;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.CollapseGroupAtIndex(System.UInt32)">
            <summary>
                <para>Collapses a group at the specified index.</para>
                <para>Original signature is '- (void) collapseGroupAtIndex:(NSUInteger) index;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="index">The index of the group you want to collapse.</param>
            <returns>NO if the image is not constrained; otherwise YES.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.ExpandGroupAtIndex(System.UInt32)">
            <summary>
                <para>Expands a group at the specified index.</para>
                <para>Original signature is '- (void) expandGroupAtIndex:(NSUInteger) index;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="index">The index of the group you want to expand.</param>
            <returns>The index of the cell where the drop operation occurred.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.IndexOfItemAtPoint(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Returns the index of the item at the specified location.</para>
                <para>Original signature is '- (NSInteger) indexOfItemAtPoint: (NSPoint)point;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="point">The location of the item.</param>
            <returns>The index of the item or NSNotFound if no item at this location.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.InitWithFrame(Monobjc.Cocoa.NSRect)">
            <summary>
                <para>Initializes a newly allocated image browser view with the provided frame rectangle.</para>
                <para>Original signature is '- (id) initWithFrame:(NSRect) frame;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="frame">The rectangle for the image browser.</param>
            <returns>The initialized object.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.IsGroupExpandedAtIndex(System.UInt32)">
            <summary>
                <para>Returns whether the group at the provided index is expanded.</para>
                <para>Original signature is '- (BOOL) isGroupExpandedAtIndex:(NSUInteger) index;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="index">The index you want to check.</param>
            <returns>YES if the group is expanded; NO otherwise.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.ItemFrameAtIndex(System.UInt32)">
            <summary>
                <para>Returns the frame rectangle for the item located at the specified index.</para>
                <para>Original signature is '- (NSRect) itemFrameAtIndex: (NSInteger)index;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="index">The index of the item whose frame rectangle you want to obtain.</param>
            <returns>The frame rectangle of the item.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.ReloadData">
            <summary>
                <para>Marks the receiver as needing its data reloaded.</para>
                <para>Original signature is '- (void) reloadData;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <returns>The indexes of the selected cells.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.ScrollIndexToVisible(System.UInt32)">
            <summary>
                <para>Scrolls the receiver to the item at the specified index.</para>
                <para>Original signature is '- (void) scrollIndexToVisible:(NSInteger) index;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="index">The index of the item to scroll to.</param>
            <returns>The indexes of the selected cells.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageBrowserView.SetSelectionIndexesByExtendingSelection(Monobjc.Cocoa.NSIndexSet,System.Boolean)">
            <summary>
                <para>Selects cells at the specified indexes.</para>
                <para>Original signature is '- (void) setSelectionIndexes:(NSIndexSet *) indexes byExtendingSelection:(BOOL) extendSelection;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="indexes">The indexes of the cells you want to select.</param>
            <param name="extendSelection">A BOOL value that specifies whether to extend the current selection. Pass YES to extends the selection; NO replaces the current selection.</param>
            <returns>The zoom value.</returns>
        </member>
        <member name="T:Monobjc.ImageKit.IKImageEditPanel">
            <summary>
            Managed wrapper for IKImageEditPanel Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageEditPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageEditPanel" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageEditPanel.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageEditPanel" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageEditPanel.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageEditPanel" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.ImageKit.IKImageEditPanel.IKImageEditPanelClass">
            <summary>
            Static field for a quick access to the IKImageEditPanel class.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageEditPanel.SharedImageEditPanel">
            <summary>
                <para>Creates a shared instance of an image editing panel.</para>
                <para>Original signature is '+ (IKImageEditPanel*) sharedImageEditPanel;'</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageEditPanel.DataSource">
            <summary>
                <para>Returns the data source associated with an image editing panel.</para>
                <para>Original signature is '- (id)dataSource;'</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageEditPanel.ReloadData">
            <summary>
                <para>Reloads the data from the data associated with an image editing panel.</para>
                <para>Original signature is '- (void)reloadData;'</para>
            </summary>
        </member>
        <member name="T:Monobjc.ImageKit.IKImageEditPanelDataSource">
            <summary>
            Managed wrapper for IKImageEditPanelDataSource Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageEditPanelDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageEditPanelDataSource" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageEditPanelDataSource.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageEditPanelDataSource" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageEditPanelDataSource.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageEditPanelDataSource" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.ImageKit.IKImageEditPanelDataSource.IKImageEditPanelDataSourceClass">
            <summary>
            Static field for a quick access to the IKImageEditPanelDataSource class.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageEditPanelDataSource.Image">
            <summary>
                <para>Returns an image.</para>
                <para>Original signature is '- (CGImageRef)image;'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageEditPanelDataSource.ImageProperties">
            <summary>
                <para>Returns a dictionary of the image properties associated with the image in the image edit panel.</para>
                <para>Original signature is '- (NSDictionary*)imageProperties;'</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageEditPanelDataSource.SetImageImageProperties(System.IntPtr,Monobjc.Cocoa.NSDictionary)">
            <summary>
                <para>Sets an image with the specifies properties.</para>
                <para>Original signature is '- (void)setImage: (CGImageRef)image imageProperties: (NSDictionary*)metaData;'</para>
            </summary>
            <returns>An image.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageEditPanelDataSource.ThumbnailWithMaximumSize(Monobjc.Cocoa.NSSize)">
            <summary>
                <para>Returns a thumbnail image whose size is no larger than the specified size.</para>
                <para>Original signature is '- (CGImageRef)thumbnailWithMaximumSize: (NSSize)size;'</para>
            </summary>
            <returns>An image.</returns>
        </member>
        <member name="T:Monobjc.ImageKit.IKImageView">
            <summary>
            Managed wrapper for IKImageView Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageView" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageView" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKImageView" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.ImageKit.IKImageView.IKToolModeMove">
            <summary>
            The move tool.
            </summary>
        </member>
        <member name="F:Monobjc.ImageKit.IKImageView.IKToolModeSelect">
            <summary>
            The selection tool.
            </summary>
        </member>
        <member name="F:Monobjc.ImageKit.IKImageView.IKToolModeCrop">
            <summary>
            The crop tool.
            </summary>
        </member>
        <member name="F:Monobjc.ImageKit.IKImageView.IKToolModeRotate">
            <summary>
            The rotation tool.
            </summary>
        </member>
        <member name="F:Monobjc.ImageKit.IKImageView.IKToolModeAnnotate">
            <summary>
            The annotation tool.
            </summary>
        </member>
        <member name="F:Monobjc.ImageKit.IKImageView.IKOverlayTypeBackground">
            <summary>
            A background.
            </summary>
        </member>
        <member name="F:Monobjc.ImageKit.IKImageView.IKOverlayTypeImage">
            <summary>
            An image.
            </summary>
        </member>
        <member name="F:Monobjc.ImageKit.IKImageView.IKImageViewClass">
            <summary>
            Static field for a quick access to the IKImageView class.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageView.Image">
            <summary>
                <para>Returns the image associated with the view, after any image corrections.</para>
                <para>Original signature is '- (CGImageRef)image;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageView.ImageProperties">
            <summary>
                <para>Returns the metadata for the image in the view.</para>
                <para>Original signature is '- (NSDictionary*)imageProperties;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKImageView.ImageSize">
            <summary>
                <para>Returns the size of the image in the image view.</para>
                <para>Original signature is '- (NSSize)imageSize;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.AutohidesScrollers(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the automatic-hiding scroll bar state for the image view.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.Autoresizes(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the automatic resizing state for the image view.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.BackgroundColor(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the background color for the image view.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.CurrentToolMode(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the current tool mode for the image view.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.Delegate(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the delegate object of the receiver.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.DoubleClickOpensImageEditPane(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the image-opening state of the editing pane in the image view.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.Editable(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the editable state for the image view.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.HasHorizontalScroller(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the horizontal scroll bar state for the image view.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.HasVerticalScroller(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the vertical scroll bar state for the image view.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.ImageCorrection(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies a Core Image filter for image correction.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.RotationAngle(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the rotation angle for the image view.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.SupportsDragAndDrop(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the drag-and-drop support state for the image view.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.ZoomFactor(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Specifies the zoom factor for the image view.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.ConvertImagePointToViewPoint(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Converts an image coordinate to an image view coordinate.</para>
                <para>Original signature is '- (NSPoint)convertImagePointToViewPoint: (NSPoint)imagePoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imagePoint">A point specified in coordinates relative to the image.</param>
            <returns>A point specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.ConvertImageRectToViewRect(Monobjc.Cocoa.NSRect)">
            <summary>
                <para>Converts an image rectangle to an image view rectangle.</para>
                <para>Original signature is '- (NSRect)convertImageRectToViewRect: (NSRect)imageRect;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imageRect">An rectangle specified in coordinates relative to the image.</param>
            <returns>An rectangle specified in coordinates relative to the image view.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.ConvertViewPointToImagePoint(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Converts an image view coordinate to an image coordinate.</para>
                <para>Original signature is '- (NSPoint)convertViewPointToImagePoint: (NSPoint)viewPoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="viewPoint">A point specified in coordinates relative to the image view.</param>
            <returns>The point specified in coordinates relative to the image.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.ConvertViewRectToImageRect(Monobjc.Cocoa.NSRect)">
            <summary>
                <para>Converts an image view rectangle to an image rectangle.</para>
                <para>Original signature is '- (NSRect)convertViewRectToImageRect: (NSRect)viewRect;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="viewRect">An rectangle specified in coordinates relative to the image view.</param>
            <returns>The rectangle specified in coordinates relative to the image.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.FlipImageHorizontal(Monobjc.Id)">
            <summary>
                <para>Flips an image along the horizontal axis.</para>
                <para>Original signature is '- (void)flipImageHorizontal: (id)sender;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="sender">The object initiating the action.</param>
            <returns>The image.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.FlipImageVertical(Monobjc.Id)">
            <summary>
                <para>Flips an image along the vertical axis.</para>
                <para>Original signature is '- (void)flipImageVertical: (id)sender;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="sender">The object initiating the action.</param>
            <returns>The image.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.OverlayForType(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns the Layer Kit layer associated with a layer type.</para>
                <para>Original signature is '- (LKLayer*)overlayForType: (NSString*)layerType;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="layerType">A layer type. See “Overlay Types”.</param>
            <returns>The Layer Kit layer.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.ScrollToPoint(Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Scrolls the view to the specified point.</para>
                <para>Original signature is '- (void)scrollToPoint:(NSPoint)point;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="point">The point to scroll to.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.ScrollToRect(Monobjc.Cocoa.NSRect)">
            <summary>
                <para>Scrolls the view so that it includes the provided rectangular area.</para>
                <para>Original signature is '- (void)scrollToRect:(NSRect)rect;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="rect">The rectangular area to include in the view.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.SetImageImageProperties(System.IntPtr,Monobjc.Cocoa.NSDictionary)">
            <summary>
                <para>Sets the image to display in an image view.</para>
                <para>Original signature is '- (void)setImage: (CGImageRef)image imageProperties: (NSDictionary*)metaData;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="image">The image to set.</param>
            <param name="metaData">A dictionary that contains metadata that describes the image.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.SetImageWithURL(Monobjc.Cocoa.NSURL)">
            <summary>
                <para>Initializes an image view with the image specified by a URL.</para>
                <para>Original signature is '- (void)setImageWithURL: (NSURL*)url;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="url">The URL that specifies the location of the image.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.SetImageZoomFactorCenterPoint(System.Single,Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Sets the zoom factor at the provided origin.</para>
                <para>Original signature is '- (void)setImageZoomFactor: (CGFloat)zoomFactor centerPoint: (NSPoint)centerPoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="zoomFactor">The zoom factor to apply to the image.</param>
            <param name="centerPoint">The point that specifies the origin of the zoom factor.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.SetOverlayForType(System.IntPtr,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Sets an overlay type for a Layer Kit layer.</para>
                <para>Original signature is '- (void)setOverlay: (LKLayer*)layer forType: (NSString*)layerType;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="layer">A Layer Kit layer object.</param>
            <param name="layerType">A layer type. See “Overlay Types”.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.SetRotationAngleCenterPoint(System.Single,Monobjc.Cocoa.NSPoint)">
            <summary>
                <para>Sets the rotation angle at the provided origin.</para>
                <para>Original signature is '- (void)setRotationAngle: (CGFloat)rotationAngle centerPoint: (NSPoint)centerPoint;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="rotationAngle">The rotation angle to apply to the image.</param>
            <param name="centerPoint">The point that specifies the origin of the rotation angle.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.ZoomImageToActualSize(Monobjc.Id)">
            <summary>
                <para>Zooms the image so that it is displayed using its true size.</para>
                <para>Original signature is '- (void)zoomImageToActualSize: (id)sender;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="sender">The object initiating the action.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.ZoomImageToFit(Monobjc.Id)">
            <summary>
                <para>Zooms the image so that it fits in the image view.</para>
                <para>Original signature is '- (void)zoomImageToFit: (id)sender;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="sender">The object initiating the action.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKImageView.ZoomImageToRect(Monobjc.Cocoa.NSRect)">
            <summary>
                <para>Zooms the image so that it fits in the specified rectangle.</para>
                <para>Original signature is '- (void)zoomImageToRect: (NSRect)rect;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="rect">The rectangle to fit the image in.</param>
        </member>
        <member name="T:Monobjc.ImageKit.IKPictureTaker">
            <summary>
            Managed wrapper for IKPictureTaker Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKPictureTaker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKPictureTaker" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKPictureTaker.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKPictureTaker" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKPictureTaker.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKPictureTaker" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.ImageKit.IKPictureTaker.IKPictureTakerClass">
            <summary>
            Static field for a quick access to the IKPictureTaker class.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKPictureTaker.PictureTaker">
            <summary>
                <para>Returns a shared IKPictureTaker instance, creating it if necessary.</para>
                <para>Original signature is '+ (IKPictureTaker *) pictureTaker;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKPictureTaker.InputImage">
            <summary>
                <para>Returns the input image associated with the picture taker.</para>
                <para>Original signature is '- (NSImage*) inputImage;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKPictureTaker.Mirroring">
            <summary>
                <para>Returns whether video mirroring is enabled during snapshots.</para>
                <para>Original signature is '- (BOOL) mirroring;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKPictureTaker.OutputImage">
            <summary>
                <para>Returns the edited image.</para>
                <para>Original signature is '- (NSImage*) outputImage;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKPictureTaker.RunModal">
            <summary>
                <para>Opens a modal picture taker dialog.</para>
                <para>Original signature is '- (NSInteger) runModal;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKPictureTaker.BeginPictureTakerSheetForWindowWithDelegateDidEndSelectorContextInfo(Monobjc.Cocoa.NSWindow,Monobjc.Id,System.IntPtr,System.IntPtr)">
            <summary>
                <para>Opens a picture taker as a sheet whose parent is the specified window.</para>
                <para>Original signature is '- (void) beginPictureTakerSheetForWindow:(NSWindow *)aWindow withDelegate:(id) delegate didEndSelector:(SEL) didEndSelector contextInfo:(void *) contextInfo;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="aWindow">The parent window of the picture taker sheet.</param>
            <param name="dlgt">The object that will invoke the selector didEndSelector when the picture taker session terminates.</param>
            <param name="didEndSelector">The selector to invoke when the picture taker session terminates.</param>
            <param name="contextInfo">Any data that must be passed as an argument to the delegate through didEndSelector after the picture taker session terminates.</param>
            <returns>The input image.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKPictureTaker.BeginPictureTakerWithDelegateDidEndSelectorContextInfo(Monobjc.Id,System.IntPtr,System.IntPtr)">
            <summary>
                <para>Opens a picture taker pane.</para>
                <para>Original signature is '- (void) beginPictureTakerWithDelegate:(id) delegate didEndSelector:(SEL) didEndSelector contextInfo:(void *) contextInfo;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="dlgt">The object that will invoke the selector didEndSelector when the picture taker session terminates.</param>
            <param name="didEndSelector">The selector to invoke when the picture taker session terminates.</param>
            <param name="contextInfo">Any data that must be passed as an argument to the delegate through didEndSelector after the picture taker session terminates.</param>
            <returns>The input image.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKPictureTaker.PopUpRecentsMenuForViewWithDelegateDidEndSelectorContextInfo(Monobjc.Cocoa.NSView,Monobjc.Id,System.IntPtr,System.IntPtr)">
            <summary>
                <para>Displays the Open Recent popup menu associated with the picture taker.</para>
                <para>Original signature is '- (void) popUpRecentsMenuForView:(NSView *) aView withDelegate:(id) delegate didEndSelector:(SEL) didEndSelector contextInfo:(void *) contextInfo;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="aView">A view.</param>
            <param name="dlgt">The object that will invoke the selector didEndSelector when the picture taker session terminates.</param>
            <param name="didEndSelector">The selector to invoke when the picture taker session terminates.</param>
            <param name="contextInfo">Any data that must be passed as an argument to the delegate through didEndSelector after the picture taker session terminates.</param>
        </member>
        <member name="T:Monobjc.ImageKit.IKSaveOptions">
            <summary>
            Managed wrapper for IKSaveOptions Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKSaveOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKSaveOptions" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKSaveOptions.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKSaveOptions" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKSaveOptions.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKSaveOptions" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.ImageKit.IKSaveOptions.IKSaveOptionsClass">
            <summary>
            Static field for a quick access to the IKSaveOptions class.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKSaveOptions.ImageProperties">
            <summary>
                <para>Returns a dictionary of image properties that reflects the user’s selection.</para>
                <para>Original signature is '- (NSDictionary *)imageProperties;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKSaveOptions.ImageUTType">
            <summary>
                <para>Returns the uniform type identifier that reflects the user’s selection.</para>
                <para>Original signature is '- (NSString *)imageUTType;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKSaveOptions.UserSelection">
            <summary>
                <para>Returns a dictionary that contains the save options selected by the user.</para>
                <para>Original signature is '- (NSDictionary *)userSelection;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKSaveOptions.AddSaveOptionsAccessoryViewToSavePanel(Monobjc.Cocoa.NSSavePanel)">
            <summary>
                <para>Adds a save options accessory view to a save panel.</para>
                <para>Original signature is '- (void)addSaveOptionsAccessoryViewToSavePanel: (NSSavePanel*)savePanel;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="savePanel">The panel you want to extend.</param>
            <returns>A dictionary of updated image properties.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKSaveOptions.InitWithImagePropertiesImageUTType(Monobjc.Cocoa.NSDictionary,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Initializes a save options accessory pane for the provided image properties and uniform type identifier.</para>
                <para>Original signature is '- (id)initWithImageProperties: (NSDictionary*)imageProperties imageUTType: (NSString*)imageUTType;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="imageProperties">A dictionary of image properties.</param>
            <param name="imageUTType">A string that specifies a uniform type identifier, such as JPEG. See Uniform Type Identifiers Overview.</param>
            <returns>The initialized object.</returns>
        </member>
        <member name="T:Monobjc.ImageKit.IKSlideshow">
            <summary>
            Managed wrapper for IKSlideshow Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKSlideshow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKSlideshow" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKSlideshow.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKSlideshow" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKSlideshow.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.ImageKit.IKSlideshow" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.ImageKit.IKSlideshow.IKSlideshowClass">
            <summary>
            Static field for a quick access to the IKSlideshow class.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKSlideshow.SharedSlideshow">
            <summary>
                <para>Returns a shared instance of a slideshow.</para>
                <para>Original signature is '+ (IKSlideshow *)sharedSlideshow'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IKSlideshow.IndexOfCurrentSlideshowItem">
            <summary>
                <para>Returns the index of the current slideshow item.</para>
                <para>Original signature is '- (NSUInteger )indexOfCurrentSlideshowItem'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKSlideshow.AutoPlayDelay(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Controls the interval of time before a slideshow starts to play automatically.</para>
                <para>Original signature is '+ (BOOL)canExportToApplication:(NSString *)applicationBundleIdentifier'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="applicationBundleIdentifier">The bundle identifier of the application that you want to export the slideshow to. See “Bundle Identifiers”.</param>
            <returns>YES if the slideshow can be exported to the specified application; NO otherwise.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKSlideshow.CanExportToApplication(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Finds out whether the slideshow can export its contents to an application.</para>
                <para>Original signature is '+ (BOOL)canExportToApplication:(NSString *)applicationBundleIdentifier'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="applicationBundleIdentifier">The bundle identifier of the application that you want to export the slideshow to. See “Bundle Identifiers”.</param>
            <returns>YES if the slideshow can be exported to the specified application; NO otherwise.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKSlideshow.ExportSlideshowItemToApplication(Monobjc.Id,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Exports a slideshow item to the application that has the provided bundle identifier.</para>
                <para>Original signature is '+ (void)exportSlideshowItem:(id)item toApplication:(NSString *)applicationBundleIdentifier'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="item">The item to export</param>
            <param name="applicationBundleIdentifier">The bundle identifier of the application that you want to export the item to.</param>
            <returns>A slideshow object.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IKSlideshow.ReloadData">
            <summary>
                <para>Reloads the data for a slideshow.</para>
                <para>Original signature is '- (void)reloadData'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IKSlideshow.ReloadSlideshowItemAtIndex(System.UInt32)">
            <summary>
                <para>Reloads the data for a slideshow, starting at the specified index.</para>
                <para>Original signature is '- (void)reloadSlideshowItemAtIndex:( NSUInteger)index'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="index">The index that species where to reload the slideshow data.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKSlideshow.RunSlideshowWithDataSourceInModeOptions(Monobjc.ImageKit.IIKSlideshowDataSource,Monobjc.Cocoa.NSString,Monobjc.Cocoa.NSDictionary)">
            <summary>
                <para>Runs a slideshow that contains the specified kind of items, provided from a data source.</para>
                <para>Original signature is '- (void)runSlideshowWithDataSource:(id&lt;IKSlideshowDataSource&gt;)dataSource inMode:(NSString *)slideshowMode options:(NSDictionary *)slideshowOptions'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="dataSource">The data source to use for the slideshow.</param>
            <param name="slideshowMode">A constant that indicate what kind of items are in the slideshow—IKSlideshowModeImages, IKSlideshowModePDF, or IKSlideshowModeQuickLook. See “Slideshow Modes”.</param>
            <param name="slideshowOptions">A dictionary of slideshow options. See “Slideshow Option Keys”.</param>
        </member>
        <member name="M:Monobjc.ImageKit.IKSlideshow.StopSlideshow(Monobjc.Id)">
            <summary>
                <para>Stops a slideshow.</para>
                <para>Original signature is '- (void)stopSlideshow:(id)sender'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="sender">The object sending the message to stop the slideshow.</param>
        </member>
        <member name="T:Monobjc.ImageKit.IIKSlideshowDataSource">
            <summary>
            Managed wrapper for "IKSlideshowDataSource Protocol Objective-C Reference" Objective-C protocol.
            </summary>
        </member>
        <member name="P:Monobjc.ImageKit.IIKSlideshowDataSource.NumberOfSlideshowItems">
            <summary>
                <para>Returns the number of items in a slideshow.</para>
                <para>Original signature is '- (NSUInteger)numberOfSlideshowItems;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.ImageKit.IIKSlideshowDataSource.CanExportSlideshowItemAtIndexToApplication(System.UInt32,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Reports whether the export button should be enabled for a a slideshow item.</para>
                <para>Original signature is '- (BOOL)canExportSlideshowItemAtIndex: (NSUInteger)index toApplication: (NSString *)applicationBundleIdentifier;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="index">The index for a slideshow item.</param>
            <param name="applicationBundleIdentifier">The application bundle identifier.</param>
            <returns>
            YES if the export button should be enabled for an item; otherwise NO.
            </returns>
        </member>
        <member name="M:Monobjc.ImageKit.IIKSlideshowDataSource.NameOfSlideshowItemAtIndex(System.UInt32)">
            <summary>
                <para>Returns the display name for item at the specified index.</para>
                <para>Original signature is '- (NSString*)nameOfSlideshowItemAtIndex: (NSUInteger)index;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="index">The index for a slideshow item.</param>
            <returns>The display name. For the best user experience, you should provide the localized name, because this string appears in the user interface.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IIKSlideshowDataSource.SlideshowDidChangeCurrentIndex(System.UInt32)">
            <summary>
                <para>Performs custom tasks when the slideshow changes to the item at the specified index.</para>
                <para>Original signature is '- (void)slideshowDidChangeCurrentIndex: (NSUInteger)newIndex;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="newIndex">The index of the current item.</param>
            <returns>The object that corresponds to the item at the specified index. The item can be any of the following objects: NSImage, NSString (to specify a path name), NSURL, NSFileWrapper, CGImageRef, or PDFPage.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IIKSlideshowDataSource.SlideshowDidStop">
            <summary>
                <para>Performs custom tasks when the slideshow stops.</para>
                <para>Original signature is '- (void)slideshowDidStop;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <returns>The object that corresponds to the item at the specified index. The item can be any of the following objects: NSImage, NSString (to specify a path name), NSURL, NSFileWrapper, CGImageRef, or PDFPage.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IIKSlideshowDataSource.SlideshowItemAtIndex(System.UInt32)">
            <summary>
                <para>Returns the item for a given index</para>
                <para>Original signature is '- (id)slideshowItemAtIndex: (NSUInteger)index;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="index">An index of an item in the slideshow.</param>
            <returns>The object that corresponds to the item at the specified index. The item can be any of the following objects: NSImage, NSString (to specify a path name), NSURL, NSFileWrapper, CGImageRef, or PDFPage.</returns>
        </member>
        <member name="M:Monobjc.ImageKit.IIKSlideshowDataSource.SlideshowWillStart">
            <summary>
                <para>Performs custom tasks when the slideshow is about to start.</para>
                <para>Original signature is '- (void)slideshowWillStart;'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
    </members>
</doc>
