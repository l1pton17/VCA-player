<?xml version="1.0"?>
<doc>
    <assembly>
        <name>/Users/laurent/Projects/Mercurial/Monobjc/dist/2.0/Monobjc.QuickTime</name>
    </assembly>
    <members>
        <member name="T:Monobjc.QuickTime.Properties.Resources">
            <summary>
            A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.Properties.Resources.ResourceManager">
            <summary>
            Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.Properties.Resources.Culture">
            <summary>
            Overrides the current thread's CurrentUICulture property for all
            resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.AudioBuffer">
            <summary>
            A single buffer and the associated data.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.AudioBuffer.mNumberChannels">
            <summary>
            Number of channels
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.AudioBuffer.mDataByteSize">
            <summary>
            Size of the data
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.AudioBuffer.mData">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.AudioBufferList">
            <summary>
            Keeps track of multiple buffers.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.AudioBufferList.mNumberBuffers">
            <summary>
            The number of buffers
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.AudioBufferList.mBuffers">
            <summary>
            An array of AudioBuffer
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.NSCoder_QTKitAdditions">
            <summary>
            Extension methods for <see cref="T:Monobjc.Cocoa.NSCoder" /> wrapper.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.NSCoder_QTKitAdditions.DecodeQTTimeForKey(Monobjc.Cocoa.NSCoder,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Decodes a QTTime structure. This method matches an encode QTTime message used during encoding.</para>
                <para>Original signature is '- (QTTime)decodeQTTimeForKey:(NSString *)key'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.NSCoder_QTKitAdditions.DecodeQTTimeRangeForKey(Monobjc.Cocoa.NSCoder,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Decodes a QTTimeRange structure. This method matches an encode QTTimeRange message used during encoding.</para>
                <para>Original signature is '- (QTTimeRange)decodeQTTimeRangeForKey:(NSString *)key'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.NSCoder_QTKitAdditions.EncodeQTTimeForKey(Monobjc.Cocoa.NSCoder,Monobjc.QuickTime.QTTime,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Original signature is '- (void)encodeQTTime:(QTTime)time forKey:(NSString *)key'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.NSCoder_QTKitAdditions.EncodeQTTimeRangeForKey(Monobjc.Cocoa.NSCoder,Monobjc.QuickTime.QTTimeRange,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Original signature is '- (void)encodeQTTimeRange:(QTTimeRange)range forKey:(NSString *)key'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.NSValue_QTKitAdditions">
            <summary>
            Extension methods for <see cref="T:Monobjc.Cocoa.NSValue" /> wrapper.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.NSValue_QTKitAdditions.ValueWithQTTime(Monobjc.QuickTime.QTTime)">
            <summary>
                <para>Creates an NSValue object that wraps the specified QTTime structure.</para>
                <para>Original signature is '+ (NSValue *)valueWithQTTime:(QTTime)time'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.NSValue_QTKitAdditions.ValueWithQTTimeRange(Monobjc.QuickTime.QTTimeRange)">
            <summary>
                <para>Creates an NSValue object that wraps the specified QTTimeRange structure.</para>
                <para>Original signature is '+ (NSValue *)valueWithQTTimeRange:(QTTimeRange)range'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.NSValue_QTKitAdditions.get_QTTimeRangeValue(Monobjc.Cocoa.NSValue)">
            <summary>
                <para>Returns a QTTimeRange structure that contains the range in an NSValue object.</para>
                <para>Original signature is '- (QTTimeRange)QTTimeRangeValue'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.NSValue_QTKitAdditions.get_QTTimeValue(Monobjc.Cocoa.NSValue)">
            <summary>
                <para>Returns a QTTime structure that contains the time in an NSValue object.</para>
                <para>Original signature is '- (QTTime)QTTimeValue'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureAudioPreviewOutput">
            <summary>
            Managed wrapper for QTCaptureAudioPreviewOutput Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureAudioPreviewOutput.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureAudioPreviewOutput" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureAudioPreviewOutput.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureAudioPreviewOutput" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureAudioPreviewOutput.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureAudioPreviewOutput" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureAudioPreviewOutput.QTCaptureAudioPreviewOutputClass">
            <summary>
            Static field for a quick access to the QTCaptureAudioPreviewOutput class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureAudioPreviewOutput.OutputDeviceUniqueID">
            <summary>
                <para>Returns the unique ID of the Core Audio output device being used to play preview audio.</para>
                <para>Original signature is '- (NSString *)deviceUniqueID'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureAudioPreviewOutput.Volume">
            <summary>
                <para>Returns the preview volume of the output.</para>
                <para>Original signature is '- (float)volume'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureConnection">
            <summary>
            Managed wrapper for QTCaptureConnection Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureConnection" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureConnection.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureConnection" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureConnection.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureConnection" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureConnection.QTCaptureConnectionAudioAveragePowerLevelsAttribute">
            <summary>
                <para>An NSArray of NSNumbers that correspond to the average power, in decibels, of each audio stream sent through the connection.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureConnection.QTCaptureConnectionAudioMasterVolumeAttribute">
            <summary>
                <para>An NSNumber that specifies the master volume of all audio channels sent through the connection.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureConnection.QTCaptureConnectionAudioPeakHoldLevelsAttribute">
            <summary>
                <para>An NSArray of NSNumbers that correspond to the peak hold level, in decibels, of each audio channel sent through the connection.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureConnection.QTCaptureConnectionAudioVolumesAttribute">
            <summary>
                <para>An NSArray of NSNumbers that specify the volumes of audio channels sent through the connection.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureConnection.QTCaptureConnectionEnabledAudioChannelsAttribute">
            <summary>
                <para>An NSIndexSet that specifies which audio channels should be sent through the connection.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureConnection.QTCaptureConnectionChangedAttributeKey">
            <summary>
                <para>Used as a key in the user info dictionary passed to QTCaptureConnectionAttributeWillChangeNotification, and QTCaptureConnectionAttributeDidChangeNotification to indicate the key of that attribute that changed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureConnection.QTCaptureConnectionAttributeDidChangeNotification">
            <summary>
                <para>Posted when one of the connection�s attributes has changed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureConnection.QTCaptureConnectionAttributeWillChangeNotification">
            <summary>
                <para>Posted when one of the connection�s attributes is about to change.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureConnection.QTCaptureConnectionFormatDescriptionDidChangeNotification">
            <summary>
                <para>Posted when the format description of a connection has changed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureConnection.QTCaptureConnectionFormatDescriptionWillChangeNotification">
            <summary>
                <para>Posted when the format description of a connection is about to change.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureConnection.QTCaptureConnectionClass">
            <summary>
            Static field for a quick access to the QTCaptureConnection class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureConnection.ConnectionAttributes">
            <summary>
                <para>Returns a dictionary of all attributes set for the receiver.</para>
                <para>Original signature is '- (NSDictionary *)connectionAttributes'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureConnection.FormatDescription">
            <summary>
                <para>Returns the format description of the receiver.</para>
                <para>Original signature is '- (QTFormatDescription *)formatDescription'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureConnection.IsEnabled">
            <summary>
                <para>Returns a Boolean value indicating whether the receiver is enabled.</para>
                <para>Original signature is '- (BOOL)isEnabled'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureConnection.MediaType">
            <summary>
                <para>Returns the QuickTime media type of the receiver.</para>
                <para>Original signature is '- (NSString *)mediaType'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureConnection.Owner">
            <summary>
                <para>Returns the QTCaptureInput or QTCaptureOutput object that owns the receiver.</para>
                <para>Original signature is '- (id)owner'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureConnection.AttributeForKey(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns the current value of the connection attribute for key.</para>
                <para>Original signature is '- (id)attributeForKey:(NSString *)key'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>Returns YES if the attribute cannot be modified; otherwise, NO.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureConnection.AttributeIsReadOnly(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns a Boolean value indicating whether the given attribute for the connection cannot be modified.</para>
                <para>Original signature is '- (BOOL)attributeIsReadOnly:(NSString *)attributeKey'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>Returns YES if the attribute cannot be modified; otherwise, NO.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureConnection.SetAttributeForKey(Monobjc.Id,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Sets a connection attribute for the given key.</para>
                <para>Original signature is '- (void)setAttribute:(id)property forKey:(NSString *)attributeKey'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput">
            <summary>
            Managed wrapper for QTCaptureDecompressedVideoOutput Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputEventDispatcher">
            <summary>
            Inner event handler that is exposed to the Objective-C runtime and relays delegate messages to listeners.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputEventDispatcher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputEventDispatcher" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputEventDispatcher.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputEventDispatcher" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputEventDispatcher.QTCaptureDecompressedVideoOutputEventDispatcherClass">
            <summary>
            Static field for a quick access to the QTCaptureDecompressedVideoOutputEventDispatcher class.
            </summary>
        </member>
        <member name="E:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputEventDispatcher.CaptureOutputDidOutputVideoFrameWithSampleBufferFromConnection">
            <summary>
                <para>Called whenever the video preview output outputs a new video frame.</para>
                <para>Original signature is '-(void)captureOutput:(QTCaptureOutput *)captureOutput didOutputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputEventDispatcher.RespondsToSelector(System.IntPtr)">
            <summary>
                <para>Returns a Boolean value that indicates whether the receiver implements or inherits a method that can respond to a specified message.</para>
                <para>Original signature is '- (BOOL)respondsToSelector:(SEL)aSelector'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
            <param name="aSelector">A selector that identifies a message.</param>
            <returns>
            YES if the receiver implements or inherits a method that can respond to aSelector, otherwise NO.
            </returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputEventDispatcher.CaptureOutputDidOutputVideoFrameWithSampleBufferFromConnectionMessage(Monobjc.QuickTime.QTCaptureOutput,System.IntPtr,Monobjc.QuickTime.QTSampleBuffer,Monobjc.QuickTime.QTCaptureConnection)">
            <summary>
                <para>Called whenever the video preview output outputs a new video frame.</para>
                <para>Original signature is '-(void)captureOutput:(QTCaptureOutput *)captureOutput didOutputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="captureOutput">The QTCaptureDecompressedVideoOutput instance that output the frame.</param>
            <param name="videoFrame">A Core Video image buffer containing the decompressed frame.</param>
            <param name="sampleBuffer">A sample buffer containing additional information about the frame, such as its presentation time.</param>
            <param name="connection">The connection from which the video was received.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputEventDispatcher.Dealloc">
            <summary>
            Deallocates the memory occupied by the receiver.
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.CaptureOutputDidOutputVideoFrameWithSampleBufferFromConnectionEventHandler">
            <summary>
                <para>Called whenever the video preview output outputs a new video frame.</para>
                <para>Original signature is '-(void)captureOutput:(QTCaptureOutput *)captureOutput didOutputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="captureOutput">The QTCaptureDecompressedVideoOutput instance that output the frame.</param>
            <param name="videoFrame">A Core Video image buffer containing the decompressed frame.</param>
            <param name="sampleBuffer">A sample buffer containing additional information about the frame, such as its presentation time.</param>
            <param name="connection">The connection from which the video was received.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputClass">
            <summary>
            Static field for a quick access to the QTCaptureDecompressedVideoOutput class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.Delegate">
            <summary>
                <para>Returns the receiver’s delegate.</para>
                <para>Original signature is '- (id)delegate'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.PixelBufferAttributes">
            <summary>
                <para>Returns the Core Video pixel buffer attributes previously set by setPixelBufferAttributes: that determine what kind of pixel buffers are output by the receiver.</para>
                <para>Original signature is '- (NSDictionary *)pixelBufferAttributes'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.OutputVideoFrameWithSampleBufferFromConnection(System.IntPtr,Monobjc.QuickTime.QTSampleBuffer,Monobjc.QuickTime.QTCaptureConnection)">
            <summary>
                <para>Called whenever the receiver outputs a new video frame.</para>
                <para>Original signature is '- (void)outputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="videoFrame">A Core Video buffer containing the decompressed frame.</param>
            <param name="sampleBuffer">A sample buffer containing additional information about the frame, such as its presentation time.</param>
            <param name="connection">The connection from which the video was received.</param>
            <returns>A dictionary containing pixel buffer attributes for buffers output by the reciever. The keys in the dictionary are described in CoreVideo/CVPixelBuffer.h. If the return value is NIL, then the receiver outputs buffers using the fastest possible pixel buffer attributes.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.SetDelegate(System.Action{Monobjc.QuickTime.QTCaptureDecompressedVideoOutput.QTCaptureDecompressedVideoOutputEventDispatcher})">
            <summary>
            Sets the delegate of the <see cref="T:Monobjc.QuickTime.QTCaptureDecompressedVideoOutput" /> instance.
            </summary>
            <param name="assignment">The assignment of delegation methods.</param>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureDevice">
            <summary>
            Managed wrapper for QTCaptureDevice Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureDevice" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureDevice" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureDevice" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceChangedAttributeKey">
            <summary>
                <para>Used as a key in the userInfo dictionary passed to QTCaptureDeviceAttributeWillChangeNotification, and QTCaptureDeviceAttributeDidChangeNotification to indicate the key of the attribute that changed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceAvailableInputSourcesAttribute">
            <summary>
                <para>For devices with multiple possible input sources, this attribute returns an array of dictionaries describing each available input source.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceInputSourceIdentifierAttribute">
            <summary>
                <para>Used to get and set the currently used input source for the device.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceInputSourceIdentifierKey">
            <summary>
                <para>An object representing a unique ID for the input source.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceInputSourceLocalizedDisplayNameKey">
            <summary>
                <para>The localized display name of an input source, suitable for display in a user interface.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceSuspendedAttribute">
            <summary>
                <para>Specifies other QTCapture device objects that correspond to the same physical device.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceLinkedDevicesAttribute">
            <summary>
                <para>An NSArray of QTCaptureDevice instances.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceLegacySequenceGrabberAttribute">
            <summary>
                <para>An NSValue interpreted as a ComponentInstance for the legacy sequence grabber component used by the device.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceAVCTransportControlsAttribute">
            <summary>
                <para>For AVC devices that read data from linear media, such as tapes, specifies the mode and speed at which that media is playing.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceAVCTransportControlsSpeedKey">
            <summary>
                <para>Specifies the approximate rate at which the device runs through linear media.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceWasConnectedNotification">
            <summary>
                <para>Posted when a device is connected or turned on.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceWasDisconnectedNotification">
            <summary>
                <para>Posted when a device is disconnected or turned off.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceFormatDescriptionsWillChangeNotification">
            <summary>
                <para>Posted when the device's formats that are returned by the formatDescriptions method are about to change.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceFormatDescriptionsDidChangeNotification">
            <summary>
                <para>Posted when the device�s formats that are returned by the formatDescriptions method have just changed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceAttributeWillChangeNotification">
            <summary>
                <para>Posted when one of the device's attributes is about to change.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceAttributeDidChangeNotification">
            <summary>
                <para>Posted when the one of device�s attributes has changed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDevice.QTCaptureDeviceClass">
            <summary>
            Static field for a quick access to the QTCaptureDevice class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDevice.InputDevices">
            <summary>
                <para>Returns an array of devices currently connected to the computer that can be used as input sources.</para>
                <para>Original signature is '+ (NSArray *)inputDevices'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDevice.DeviceAttributes">
            <summary>
                <para>Returns a dictionary of the device’s current attirbutes.</para>
                <para>Original signature is '- (NSDictionary *)deviceAttributes'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDevice.FormatDescriptions">
            <summary>
                <para>Returns an array of stream formats currently in use by the device.</para>
                <para>Original signature is '- (NSArray *)formatDescriptions'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDevice.IsConnected">
            <summary>
                <para>Returns YES if the device is connected to the computer.</para>
                <para>Original signature is '- (BOOL)isConnected'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDevice.IsInUseByAnotherApplication">
            <summary>
                <para>Returns YES is the device is connected, but being exclusively used by another application.</para>
                <para>Original signature is '- (BOOL)isInUseByAnotherApplication'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDevice.IsOpen">
            <summary>
                <para>Returns YES if the device is open in the current application.</para>
                <para>Original signature is '- (BOOL)isOpen'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDevice.LocalizedDisplayName">
            <summary>
                <para>Returns a localized human-readable name for the receiver’s device.</para>
                <para>Original signature is '- (NSString *)localizedDisplayName'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDevice.ModelUniqueID">
            <summary>
                <para>Returns the unique ID of the model of the receiver’s device.</para>
                <para>Original signature is '- (NSString *)modelUniqueID'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDevice.UniqueID">
            <summary>
                <para>Returns the unique ID of the receiver’s device.</para>
                <para>Original signature is '- (NSString *)uniqueID'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.DefaultInputDeviceWithMediaType(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns a QTCaptureDevice instance for the default device connected to the user’s system of the given media type.</para>
                <para>Original signature is '+ (QTCaptureDevice *)defaultInputDeviceWithMediaType:(NSString *)mediaType'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="mediaType">The media type, such as QTMediaTypeVideo, QTMediaTypeSound, or QTMediaTypeMuxed, supported by the returned device.</param>
            <returns>The default device with the given media type on the user’s system, or NIL if no device with that media type exists.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.DeviceWithUniqueID(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns a QTCaptureDevice instance with the identifier device UID.</para>
                <para>Original signature is '+ (QTCaptureDevice *)deviceWithUniqueID:(NSString *)deviceUID'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="deviceUID">The unique identifier of the device instance to be returned.</param>
            <returns>If a device with unique identifier deviceUID was connected to the computer at some point during the lifetime of the application, this method returns a QTCaptureDevice instance for that identifier. Otherwise, this method returns NIL.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.InputDevicesWithMediaType(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns an array of input devices currently connected to the computer that send a stream with the given media type.</para>
                <para>Original signature is '+ (NSArray *)inputDevicesWithMediaType:(NSString *)mediaType'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="mediaType">The media type, such as QTMediaTypeVideo, QTMediaTypeSound, or QTMediaTypeMuxed, supported by each returned device.</param>
            <returns>An array of QTCaptureDevice instances for each connected device with the given media type. If there are no available devices, the returned array will be empty.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.AttributeForKey(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns a device attribute for the given key.</para>
                <para>Original signature is '- (id)attributeForKey:(NSString *)attributeKey'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>Returns YES if the attribute cannot be modified; otherwise, NO.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.AttributeIsReadOnly(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns whether the given attribute for the device cannot be modified.</para>
                <para>Original signature is '- (BOOL)attributeIsReadOnly:(NSString *)attributeKey'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>Returns YES if the attribute cannot be modified; otherwise, NO.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.Close">
            <summary>
                <para>Releases application control over the device acquired in the open: method.</para>
                <para>Original signature is '- (void)close'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>An dictionary of attributes supported by the device.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.HasMediaType(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns whether the receiver sends a stream with the given media type.</para>
                <para>Original signature is '- (BOOL)hasMediaType:(NSString *)mediaType'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="mediaType">A media type, such as QTMediaTypeVideo, QTMediaTypeSound, or QTMediaTypeMuxed.</param>
            <returns>Returns YES if the device outputs the given media type, NO otherwise.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.Open(Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Attempts to give the application control over the device so that it can be used for capture.</para>
                <para>Original signature is '- (BOOL)open:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <param name="errorPtr">If not equal to nil, points to an NSError describing why the device could not be opened, or points to nil if the device was opened successfully.</param>
            <returns>Returns YES if the device was opened successfully; otherwise, NO.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDevice.SetAttributeForKey(Monobjc.Id,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Sets a device attribute for the given key.</para>
                <para>Original signature is '- (void)setAttribute:(id)propertyforKey:(NSString *)attributeKey'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
            <returns>The unique identifier of the device corresponding to the receiver.</returns>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsPlaybackMode">
            <summary>
            A value provided with the QTCaptureDeviceAVCTransportControlsPlaybackModeKey key that specifies whether the device previews audio and displays video while it is running through linear media.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsPlaybackMode.QTCaptureDeviceAVCTransportControlsNotPlayingMode">
            <summary>
                <para>Equivalent to Stop on most cameras and tape decks.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsPlaybackMode.QTCaptureDeviceAVCTransportControlsPlayingMode">
            <summary>
                <para>Equivalent to Play on most cameras and tape decks.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed">
            <summary>
            A value provided with the QTCaptureDeviceAVCTransportControlsSpeedKey key that specifies whether the device previews audio and displays video while it is running through linear media.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsFastestReverseSpeed">
            <summary>
                <para>Media runs in reverse at greater than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsVeryFastReverseSpeed">
            <summary>
                <para>Media runs in reverse at greater than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsFastReverseSpeed">
            <summary>
                <para>Media runs in reverse at greater than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsNormalReverseSpeed">
            <summary>
                <para>Media runs in reverse at normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsSlowReverseSpeed">
            <summary>
                <para>Media runs in reverse at less than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsVerySlowReverseSpeed">
            <summary>
                <para>Media runs in reverse at less than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsSlowestReverseSpeed">
            <summary>
                <para>Media runs in reverse at less than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsStoppedSpeed">
            <summary>
                <para>Media is paused.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsSlowestForwardSpeed">
            <summary>
                <para>Media runs forward at less than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsVerySlowForwardSpeed">
            <summary>
                <para>Media runs forward at less than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsSlowForwardSpeed">
            <summary>
                <para>Media runs forward at less than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsNormalForwardSpeed">
            <summary>
                <para>Media runs forward at normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsFastForwardSpeed">
            <summary>
                <para>Media runs forward at greater than than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsVeryFastForwardSpeed">
            <summary>
                <para>Media runs forward at greater than than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceAVCTransportControlsSpeed.QTCaptureDeviceAVCTransportControlsFastestForwardSpeed">
            <summary>
                <para>Media runs forward at greater than than normal speed.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureDeviceInput">
            <summary>
            Managed wrapper for QTCaptureDeviceInput Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDeviceInput.#ctor(Monobjc.QuickTime.QTCaptureDevice)">
            <summary>
                <para>Returns an instance of QTCaptureDeviceInput associated with the given device.</para>
                <para>Original signature is '-(id)initWithDevice:(QTCaptureDevice *)device'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDeviceInput.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureDeviceInput" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDeviceInput.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureDeviceInput" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDeviceInput.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureDeviceInput" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureDeviceInput.QTCaptureDeviceInputClass">
            <summary>
            Static field for a quick access to the QTCaptureDeviceInput class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureDeviceInput.Device">
            <summary>
                <para>Returns the device associated with the receiver.</para>
                <para>Original signature is '- (QTCaptureDevice *)device'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDeviceInput.DeviceInputWithDevice(Monobjc.QuickTime.QTCaptureDevice)">
            <summary>
                <para>Returns an autoreleased instance of QTCaptureDeviceInput associated with the given device.</para>
                <para>Original signature is '+ (QTCaptureDeviceInput *)deviceInputWithDevice:(QTCaptureDevice *)device'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="device">A QTCaptureDevice for the device to be associated with the receiver. The device must have been previously opened using the open: method or this method will throw an NSInvalidArgumentException.</param>
            <returns>A QTCaptureDeviceInput instance associated with the device.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureDeviceInput.InitWithDevice(Monobjc.QuickTime.QTCaptureDevice)">
            <summary>
                <para>Returns an instance of QTCaptureDeviceInput associated with the given device.</para>
                <para>Original signature is '- (id)initWithDevice:(QTCaptureDevice *)device'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="device">A QTCaptureDevice object for the device to be associated with the receiver. The device must have been previously opened using the open: method, or else this method will throw an NSInvalidArgumentException.</param>
            <returns>A QTCaptureDeviceInput instance associated with the device.</returns>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureFileOutput">
            <summary>
            Managed wrapper for QTCaptureFileOutput Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureFileOutput" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureFileOutput" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureFileOutput" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureFileOutput.QTCaptureFileOutputClass">
            <summary>
            Static field for a quick access to the QTCaptureFileOutput class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureFileOutput.Delegate">
            <summary>
                <para>Returns the receiver’s delegate.</para>
                <para>Original signature is '- (id)delegate'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureFileOutput.MaximumRecordedDuration">
            <summary>
                <para>Returns the maximum duration of the media that should be recorded by the receiver.</para>
                <para>Original signature is '- (QTTime )maximumRecordedDuration'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureFileOutput.MaximumRecordedFileSize">
            <summary>
                <para>Returns the maximum file size, in bytes, of the file that should be recorded by the receiver.</para>
                <para>Original signature is '- (UInt64 )maximumRecordedFileSize'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureFileOutput.OutputFileURL">
            <summary>
                <para>Returns the file written to by the receiver.</para>
                <para>Original signature is '- (NSURL *)outputFileURL'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureFileOutput.RecordedDuration">
            <summary>
                <para>Returns the duration of the media recorded by the receiver.</para>
                <para>Original signature is '- (QTTime )recordedDuration'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureFileOutput.RecordedFileSize">
            <summary>
                <para>Returns the size, in bytes, of the data recorded by the receiver to output files.</para>
                <para>Original signature is '- (UInt64 )recordedFileSize'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.CaptureOutputDidFinishRecordingToOutputFileAtURLForConnectionsDueToError(Monobjc.QuickTime.QTCaptureFileOutput,Monobjc.Cocoa.NSURL,Monobjc.Cocoa.NSArray,Monobjc.Cocoa.NSError)">
            <summary>
                <para>Informs the delegate when an output file is ready to be opened by applications.</para>
                <para>Original signature is '- (void)captureOutput:(QTCaptureFileOutput *)captureOutput didFinishRecordingToOutputFileAtURL:(NSURL *)outputFileURL forConnections:(NSArray *)connections dueToError:(NSError *)error'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="captureOutput">The capture file output that has finished writing the file.</param>
            <param name="outputFileURL">The file URL of the file that has been written.</param>
            <param name="connections">An array of QTCaptureConnection objects owned by the receiver that provided the data that was written to the file.</param>
            <param name="error">An error describing what caused the file to stop recording, or NIL if there was no error.</param>
            <returns>Delegates should return YES if the current file should no longer be written, or NO if the current file should continue to be written.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.CaptureOutputDidOutputSampleBufferFromConnection(Monobjc.QuickTime.QTCaptureFileOutput,Monobjc.QuickTime.QTSampleBuffer,Monobjc.QuickTime.QTCaptureConnection)">
            <summary>
                <para>Gives the delegate the opportunity to inpect samples as they are received by the output and start and stop capturing at exact times.</para>
                <para>Original signature is '- (void)captureOutput:(QTCaptureFileOutput *)captureOutput didOutputSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="captureOutput">The capture file output that is receiving the media data.</param>
            <param name="sampleBuffer">A sample buffer object containing the sample data and additional information about the sample, such as its time code and record date.</param>
            <param name="connection">The capture connection object owned by the receiver that is receiving the sample data.</param>
            <returns>Delegates should return YES if the current file should no longer be written, or NO if the current file should continue to be written.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.CaptureOutputDidStartRecordingToOutputFileURLForConnections(Monobjc.QuickTime.QTCaptureFileOutput,Monobjc.Cocoa.NSURL,Monobjc.Cocoa.NSArray)">
            <summary>
                <para>Informs the delegate when the output has started writing to a file.</para>
                <para>Original signature is '- (void)captureOutput:(QTCaptureFileOutput *)captureOutput didStartRecordingToOutputFileURL:(NSURL *)fileURL forConnections:(NSArray *)connections'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="captureOutput">The capture file output that started writing the file.</param>
            <param name="fileURL">The file URL of the file being written.</param>
            <param name="connections">An array of QTCaptureConnection objects owned by the receiver that provided the data that is being written to the file.</param>
            <returns>Delegates should return YES if the current file should no longer be written, or NO if the current file should continue to be written.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.CaptureOutputMustChangeOutputFileAtURLForConnectionsDueToError(Monobjc.QuickTime.QTCaptureFileOutput,Monobjc.Cocoa.NSURL,Monobjc.Cocoa.NSArray,Monobjc.Cocoa.NSError)">
            <summary>
                <para>Informs the delegate when an output file can no longer be written using the incoming media.</para>
                <para>Original signature is '- (void)captureOutput:(QTCaptureFileOutput *)captureOutput mustChangeOutputFileAtURL:(NSURL *)outputFileURL forConnections:(NSArray *)connections dueToError:(NSError *)error'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="captureOutput">The capture file output that must finish writing the file.</param>
            <param name="outputFileURL">The file URL of the file that is being written.</param>
            <param name="connections">An array of QTCaptureConnection objects owned by the receiver that provided the data that is being written to the file.</param>
            <param name="error">The error that caused the output to require that a new file be written.</param>
            <returns>Delegates should return YES if the current file should no longer be written, or NO if the current file should continue to be written.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.CaptureOutputShouldChangeOutputFileAtURLForConnections(Monobjc.QuickTime.QTCaptureFileOutput,Monobjc.Cocoa.NSURL,Monobjc.Cocoa.NSArray,Monobjc.Cocoa.NSError)">
            <summary>
                <para>Gives the delegate the opportunity to determine what should happen when an output file has reached a soft limit.</para>
                <para>Original signature is '- (BOOL)captureOutput:(QTCaptureFileOutput *)captureOutput shouldChangeOutputFileAtURL:(NSURL *)outputFileURL forConnections:(NSArray *)connections dueToError:(NSError *)error'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="captureOutput">The capture file output that should finish writing the file.</param>
            <param name="outputFileURL">The file URL of the file that is being written.</param>
            <param name="connections">An array of QTCaptureConnection objects owned by the receiver that provided the data that is being written to the file.</param>
            <param name="error">The error that caused the output to suggest that a new file be written.</param>
            <returns>Delegates should return YES if the current file should no longer be written, or NO if the current file should continue to be written.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.CaptureOutputWillFinishRecordingToOutputFileAtURLForConnectionsDueToError(Monobjc.QuickTime.QTCaptureFileOutput,Monobjc.Cocoa.NSURL,Monobjc.Cocoa.NSArray,Monobjc.Cocoa.NSError)">
            <summary>
                <para>Informs the delegate whenthe output will stop writing new samples to a file.</para>
                <para>Original signature is '- (void)captureOutput:(QTCaptureFileOutput *)captureOutput willFinishRecordingToOutputFileAtURL:(NSURL *)outputFileURL forConnections:(NSArray *)connections dueToError:(NSError *)error'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="captureOutput">The capture file output that will finish writing the file.</param>
            <param name="outputFileURL">The file URL of the file that is being written.</param>
            <param name="connections">An array of QTCaptureConnection objects owned by the receiver that provided the data that is being written to the file.</param>
            <param name="error">An error describing what caused the file to stop recording, or nil if there was no error.</param>
            <returns>A QTCompressionOptions object detailing the options being used to compress captured media on the given connection, or NIL if the media will not be recompressed.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.CaptureOutputWillStartRecordingToOutputFileURLForConnections(Monobjc.QuickTime.QTCaptureFileOutput,Monobjc.Cocoa.NSURL,Monobjc.Cocoa.NSArray)">
            <summary>
                <para>Informs the delegate when the output is about to start writing to a file.</para>
                <para>Original signature is '- (void)captureOutput:(QTCaptureFileOutput *)captureOutput willStartRecordingToOutputFileURL:(NSURL *)fileURL forConnections:(NSArray *)connections'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="captureOutput">The capture file output that will start writing the file.</param>
            <param name="fileURL">The file URL of the file that will be written.</param>
            <param name="connections">An array of QTCaptureConnection objects owned by the receiver that provided the data that will be written to the file.</param>
            <returns>A QTCompressionOptions object detailing the options being used to compress captured media on the given connection, or NIL if the media will not be recompressed.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.CompressionOptionsForConnection(Monobjc.QuickTime.QTCaptureConnection)">
            <summary>
                <para>Returns the options the receiver uses to compress media on the given connection as it is being captured.</para>
                <para>Original signature is '- (QTCompressionOptions *)compressionOptionsForConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="connection">The connection containing the media to be compressed.</param>
            <returns>A QTCompressionOptions object detailing the options being used to compress captured media on the given connection, or NIL if the media will not be recompressed.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.RecordToOutputFileURL(Monobjc.Cocoa.NSURL)">
            <summary>
                <para>Sets the file written to by the receiver.</para>
                <para>Original signature is '- (void)recordToOutputFileURL:(NSURL *)outputURL'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="outputURL">An NSURL object containing the URL of the output file, or NIL if the receiver should not record to any file. This method throws an NSInvalidArgumentException if the URL is not a valid file URL.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.RecordToOutputFileURLBufferDestination(Monobjc.Cocoa.NSURL,Monobjc.QuickTime.QTCaptureFileOutputBufferDestination)">
            <summary>
                <para>Sets the file written to by the receiver, specifying where the sample buffer currently in flight should be recorded.</para>
                <para>Original signature is '- (void)recordToOutputFileURL:(NSURL *)url bufferDestination:(QTCaptureFileOutputBufferDestination)bufferDestination'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="url">An NSURL object containing the URL of the output file, or NIL if the receiver should not record to any file. This method throws an NSInvalidArgumentException if the URL is not a valid file URL.</param>
            <param name="bufferDestination">A buffer destination specifying which file should contain the buffer currently in flight.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.SetCompressionOptionsForConnection(Monobjc.QuickTime.QTCompressionOptions,Monobjc.QuickTime.QTCaptureConnection)">
            <summary>
                <para>Sets the options the receiver uses to compress media on the given connection as it is being captured.</para>
                <para>Original signature is '- (void)setCompressionOptions:(QTCompressionOptions *)compressionOptions forConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="compressionOptions">A QTCompressionOptions object detailing the options being used to compress captured media, or NIL if the media should not be recompressed.</param>
            <param name="connection">The connection containing the media to be compressed.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.EncodeWithCoder(Monobjc.Cocoa.NSCoder)">
            <summary>
                <para>Encodes the receiver using a given archiver.</para>
                <para>Original signature is '- (void)encodeWithCoder:(NSCoder *)encoder'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
            <param name="encoder">An archiver object.</param>
            <returns>self, initialized using the data in decoder.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureFileOutput.InitWithCoder(Monobjc.Cocoa.NSCoder)">
            <summary>
                <para>Returns an object initialized from data in a given unarchiver.</para>
                <para>Original signature is '- (id)initWithCoder:(NSCoder *)decoder'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
            <param name="decoder">An unarchiver object.</param>
            <returns>self, initialized using the data in decoder.</returns>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureFileOutputBufferDestination">
            <summary>
            Specifies where the media sample buffer currently in flight should be written when changing output files.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureFileOutputBufferDestination.QTCaptureFileOutputBufferDestinationNewFile">
            <summary>
                <para>QTCaptureFileOutputBufferDestinationNewFile tells the output to include the buffer currently in flight in the old file.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureFileOutputBufferDestination.QTCaptureFileOutputBufferDestinationOldFile">
            <summary>
                <para>QTCaptureFileOutputBufferDestinationOldFile tells the output to include the buffer currently in flight in the new file.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureInput">
            <summary>
            Managed wrapper for QTCaptureInput Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureInput.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureInput" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureInput.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureInput" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureInput.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureInput" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureInput.QTCaptureInputClass">
            <summary>
            Static field for a quick access to the QTCaptureInput class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureInput.Connections">
            <summary>
                <para>Returns an array of connections owned by the receiver.</para>
                <para>Original signature is '- (NSArray *)connections'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureLayer">
            <summary>
            Managed wrapper for QTCaptureLayer Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureLayer.#ctor(Monobjc.Id)">
            <summary>
                <para>Override to copy or initialize custom fields of the specified layer.</para>
                <para>Original signature is '- (id)initWithLayer:(id)layer'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureLayer.#ctor(Monobjc.QuickTime.QTCaptureSession)">
            <summary>
                <para>Creates a QTCaptureLayer associated with the specified QTCaptureSession object.</para>
                <para>Original signature is '-(id)initWithSession:(QTCaptureSession *)session'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureLayer" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureLayer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureLayer" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureLayer.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureLayer" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureLayer.QTCaptureLayerClass">
            <summary>
            Static field for a quick access to the QTCaptureLayer class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureLayer.Session">
            <summary>
                <para>Returns the capture session associated with a QTCaptureLayer object.</para>
                <para>Original signature is '- (QTCaptureSession *)session'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureLayer.LayerWithSession(Monobjc.QuickTime.QTCaptureSession)">
            <summary>
                <para>Creates an autoreleased QTCaptureLayer associated with the specified QTCaptureSession object.</para>
                <para>Original signature is '+ (id)layerWithSession:(QTCaptureSession *)session'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureLayer.InitWithSession(Monobjc.QuickTime.QTCaptureSession)">
            <summary>
                <para>Creates a QTCaptureLayer associated with the specified QTCaptureSession object.</para>
                <para>Original signature is '- (id)initWithSession:(QTCaptureSession *)session'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureMovieFileOutput">
            <summary>
            Managed wrapper for QTCaptureMovieFileOutput Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureMovieFileOutput.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureMovieFileOutput" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureMovieFileOutput.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureMovieFileOutput" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureMovieFileOutput.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureMovieFileOutput" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureMovieFileOutput.QTCaptureMovieFileOutputClass">
            <summary>
            Static field for a quick access to the QTCaptureMovieFileOutput class.
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureOutput">
            <summary>
            Managed wrapper for QTCaptureOutput Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureOutput.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureOutput" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureOutput.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureOutput" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureOutput.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureOutput" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureOutput.QTCaptureOutputClass">
            <summary>
            Static field for a quick access to the QTCaptureOutput class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureOutput.Connections">
            <summary>
                <para>Returns an array of connections owned by the receiver that are currently connected to a capture session.</para>
                <para>Original signature is '- (NSArray *)connections'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureSession">
            <summary>
            Managed wrapper for QTCaptureSession Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureSession.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureSession" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureSession.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureSession" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureSession.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureSession" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureSession.QTCaptureSessionRuntimeErrorNotification">
            <summary>
                <para>Posted when an error occurs that while a capture session is running prevents input media from being previewed or captured. The notification user info dictionary QTCaptureSessionErrorKey entry contains an NSError object that describes the error that prevented the session from running properly. Normally, such errors are caused by an invalid configuration of inputs and outputs.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureSession.QTCaptureSessionClass">
            <summary>
            Static field for a quick access to the QTCaptureSession class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureSession.Inputs">
            <summary>
                <para>Returns an array of inputs connected to the receiver.</para>
                <para>Original signature is '- (NSArray *)inputs'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureSession.IsRunning">
            <summary>
                <para>Returns whether the receiver is running.</para>
                <para>Original signature is '- (BOOL)isRunning;'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureSession.Outputs">
            <summary>
                <para>Returns an array of outputs connected to the receiver.</para>
                <para>Original signature is '- (NSArray *)outputs'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureSession.AddInputError(Monobjc.QuickTime.QTCaptureInput,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Adds an input to the receiver.</para>
                <para>Original signature is '- (BOOL)addInput:(QTCaptureInput *)input error:(NSError **)errorPtr'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="input">The capture input to be connected to the receiver.</param>
            <param name="errorPtr">After the method returns, if this parameter is not equal to NIL, it points to an error describing why the input could not be added, or points to NIL if the input was added successfully.</param>
            <returns>Returns YES if the input was added successfully, or has already been added to the receiver. Returns NO if the input could not be added.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureSession.AddOutputError(Monobjc.QuickTime.QTCaptureOutput,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Adds an output to the receiver.</para>
                <para>Original signature is '- (BOOL)addOutput:(QTCaptureOutput *)output error:(NSError **)errorPtr'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="output">The QTCaptureOutput instance connection to be connected to the receiver.</param>
            <param name="errorPtr">If not equal to NIL, points to an error describing why the output could not be added, or points to NIL if the output was added successfully.</param>
            <returns>Returns YES if the output was added successfully, or has already been added to the receiver. Returns NO if the output could not be added.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureSession.RemoveInput(Monobjc.QuickTime.QTCaptureInput)">
            <summary>
                <para>Removes an input from the receiver.</para>
                <para>Original signature is '- (void)removeInput:(QTCaptureInput *)input'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="input">The QTCaptureInput to be removed from the receiver.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureSession.RemoveOutput(Monobjc.QuickTime.QTCaptureOutput)">
            <summary>
                <para>Removes an output from the receiver.</para>
                <para>Original signature is '- (void)removeOutput:(QTCaptureOutput *)output'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="output">The QTCaptureOutput instance to be disconnected from the receiver.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureSession.StartRunning">
            <summary>
                <para>Tells the receiver to start capturing data from its inputs and sending data to its outputs.</para>
                <para>Original signature is '- (void)startRunning;'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureSession.StopRunning">
            <summary>
                <para>Tells the receiver to stop capturing data from its inputs and sending data to its outputs.</para>
                <para>Original signature is '- (void)stopRunning;'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureVideoPreviewOutput">
            <summary>
            Managed wrapper for QTCaptureVideoPreviewOutput Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureVideoPreviewOutput" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureVideoPreviewOutput" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureVideoPreviewOutput" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputEventDispatcher">
            <summary>
            Inner event handler that is exposed to the Objective-C runtime and relays delegate messages to listeners.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputEventDispatcher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputEventDispatcher" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputEventDispatcher.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputEventDispatcher" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputEventDispatcher.QTCaptureVideoPreviewOutputEventDispatcherClass">
            <summary>
            Static field for a quick access to the QTCaptureVideoPreviewOutputEventDispatcher class.
            </summary>
        </member>
        <member name="E:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputEventDispatcher.CaptureOutputDidOutputVideoFrameWithSampleBufferFromConnection">
            <summary>
                <para>Called whenever the video preview output outputs a new video frame.</para>
                <para>Original signature is '-(void)captureOutput:(QTCaptureOutput *)captureOutput didOutputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputEventDispatcher.RespondsToSelector(System.IntPtr)">
            <summary>
                <para>Returns a Boolean value that indicates whether the receiver implements or inherits a method that can respond to a specified message.</para>
                <para>Original signature is '- (BOOL)respondsToSelector:(SEL)aSelector'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
            <param name="aSelector">A selector that identifies a message.</param>
            <returns>
            YES if the receiver implements or inherits a method that can respond to aSelector, otherwise NO.
            </returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputEventDispatcher.CaptureOutputDidOutputVideoFrameWithSampleBufferFromConnectionMessage(Monobjc.QuickTime.QTCaptureOutput,System.IntPtr,Monobjc.QuickTime.QTSampleBuffer,Monobjc.QuickTime.QTCaptureConnection)">
            <summary>
                <para>Called whenever the video preview output outputs a new video frame.</para>
                <para>Original signature is '-(void)captureOutput:(QTCaptureOutput *)captureOutput didOutputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="captureOutput">The QTCaptureVideoPreviewOutput instance that output the frame.</param>
            <param name="videoFrame">A CVImageBufferRef containing the decompressed frame.</param>
            <param name="sampleBuffer">A QTSampleBuffer object containing additional information about the frame, such as its presentation time.</param>
            <param name="connection">The connection from which the video was received.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputEventDispatcher.Dealloc">
            <summary>
            Deallocates the memory occupied by the receiver.
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.CaptureOutputDidOutputVideoFrameWithSampleBufferFromConnectionEventHandler">
            <summary>
                <para>Called whenever the video preview output outputs a new video frame.</para>
                <para>Original signature is '-(void)captureOutput:(QTCaptureOutput *)captureOutput didOutputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="captureOutput">The QTCaptureVideoPreviewOutput instance that output the frame.</param>
            <param name="videoFrame">A CVImageBufferRef containing the decompressed frame.</param>
            <param name="sampleBuffer">A QTSampleBuffer object containing additional information about the frame, such as its presentation time.</param>
            <param name="connection">The connection from which the video was received.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputClass">
            <summary>
            Static field for a quick access to the QTCaptureVideoPreviewOutput class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.Delegate">
            <summary>
                <para>Returns the receiver’s delegate.</para>
                <para>Original signature is '- (id)delegate'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.OutputVideoFrameWithSampleBufferFromConnection(System.IntPtr,Monobjc.QuickTime.QTSampleBuffer,Monobjc.QuickTime.QTCaptureConnection)">
            <summary>
                <para>Called whenever the receiver outputs a new video frame.</para>
                <para>Original signature is '- (void)outputVideoFrame:(CVImageBufferRef)videoFrame withSampleBuffer:(QTSampleBuffer *)sampleBuffer fromConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="videoFrame">A buffer containing the decompressed frame.</param>
            <param name="sampleBuffer">A sample buffer containing additional information about the frame, such as its presentation time.</param>
            <param name="connection">The connection from which the video was received.</param>
            <returns>A QTVisualContextRef that provides access to a video preview for the given connection.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.SetVisualContextForConnection(System.IntPtr,Monobjc.QuickTime.QTCaptureConnection)">
            <summary>
                <para>Sets the QuickTime visual context used to preview the video for the described connection.</para>
                <para>Original signature is '- (void)setVisualContext:( QTVisualContextRef)visualContext forConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="visualContext">A QTVisualContextRef to be used for the preview of the given connection.</param>
            <param name="connection">The connection to be previewed by the given visual context.</param>
            <returns>A QTVisualContextRef that provides access to a video preview for the given connection.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.VisualContextForConnection(Monobjc.QuickTime.QTCaptureConnection)">
            <summary>
                <para>Returns the QuickTime visual context used to preview the video for the given connection.</para>
                <para>Original signature is '- (QTVisualContextRef )visualContextForConnection:(QTCaptureConnection *)connection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="connection">The connection previewed by the returned visual context.</param>
            <returns>A QTVisualContextRef that provides access to a video preview for the given connection.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureVideoPreviewOutput.SetDelegate(System.Action{Monobjc.QuickTime.QTCaptureVideoPreviewOutput.QTCaptureVideoPreviewOutputEventDispatcher})">
            <summary>
            Sets the delegate of the <see cref="T:Monobjc.QuickTime.QTCaptureVideoPreviewOutput" /> instance.
            </summary>
            <param name="assignment">The assignment of delegation methods.</param>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureView">
            <summary>
            Managed wrapper for QTCaptureView Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureView.#ctor(Monobjc.Cocoa.NSRect)">
            <summary>
                <para>Initializes and returns a newly allocated NSView object with a specified frame rectangle.</para>
                <para>Original signature is '- (id)initWithFrame:(NSRect)frameRect'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureView" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureView" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureView.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureView" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureView.QTCaptureViewEventDispatcher">
            <summary>
            Inner event handler that is exposed to the Objective-C runtime and relays delegate messages to listeners.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureView.QTCaptureViewEventDispatcher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureView.QTCaptureViewEventDispatcher" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureView.QTCaptureViewEventDispatcher.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCaptureView.QTCaptureViewEventDispatcher" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureView.QTCaptureViewEventDispatcher.QTCaptureViewEventDispatcherClass">
            <summary>
            Static field for a quick access to the QTCaptureViewEventDispatcher class.
            </summary>
        </member>
        <member name="E:Monobjc.QuickTime.QTCaptureView.QTCaptureViewEventDispatcher.ViewWillDisplayImage">
            <summary>
                <para>Delegates of QTCaptureView can implement this method to modify the image that is to be drawn into a QTCaptureView.</para>
                <para>Original signature is '-(CIImage *)view:(QTCaptureView *)view willDisplayImage :(CIImage *)image'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureView.QTCaptureViewEventDispatcher.RespondsToSelector(System.IntPtr)">
            <summary>
                <para>Returns a Boolean value that indicates whether the receiver implements or inherits a method that can respond to a specified message.</para>
                <para>Original signature is '- (BOOL)respondsToSelector:(SEL)aSelector'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
            <param name="aSelector">A selector that identifies a message.</param>
            <returns>
            YES if the receiver implements or inherits a method that can respond to aSelector, otherwise NO.
            </returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureView.QTCaptureViewEventDispatcher.ViewWillDisplayImageMessage(Monobjc.QuickTime.QTCaptureView,Monobjc.Cocoa.CIImage)">
            <summary>
                <para>Delegates of QTCaptureView can implement this method to modify the image that is to be drawn into a QTCaptureView.</para>
                <para>Original signature is '-(CIImage *)view:(QTCaptureView *)view willDisplayImage :(CIImage *)image'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="view">A QTCaptureView object that identifies the view which is about to draw.</param>
            <param name="image">A CIImage object that represents the frame that will otherwise be drawn to the QTCaptureView.</param>
            <returns>Delegates should return a CIImage object to be drawn by the capture view, or NIL if the capture view should draw the original image.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureView.QTCaptureViewEventDispatcher.Dealloc">
            <summary>
            Deallocates the memory occupied by the receiver.
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTCaptureView.ViewWillDisplayImageEventHandler">
            <summary>
                <para>Delegates of QTCaptureView can implement this method to modify the image that is to be drawn into a QTCaptureView.</para>
                <para>Original signature is '-(CIImage *)view:(QTCaptureView *)view willDisplayImage :(CIImage *)image'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="view">A QTCaptureView object that identifies the view which is about to draw.</param>
            <param name="image">A CIImage object that represents the frame that will otherwise be drawn to the QTCaptureView.</param>
            <returns>Delegates should return a CIImage object to be drawn by the capture view, or NIL if the capture view should draw the original image.</returns>
        </member>
        <member name="F:Monobjc.QuickTime.QTCaptureView.QTCaptureViewClass">
            <summary>
            Static field for a quick access to the QTCaptureView class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureView.AvailableVideoPreviewConnections">
            <summary>
                <para>Returns an array of output video connections that can be previewed.</para>
                <para>Original signature is '- (NSArray *)availableVideoPreviewConnections'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureView.CaptureSession">
            <summary>
                <para>Returns the capture session being previewed by the receiver.</para>
                <para>Original signature is '- (QTCaptureSession *)captureSession'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureView.Delegate">
            <summary>
                <para>Returns the receiver’s delegate.</para>
                <para>Original signature is '- (id)delegate'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureView.FillColor">
            <summary>
                <para>Returns the fill color drawn in the area of the view not covered by the video preview.</para>
                <para>Original signature is '- (NSColor *)fillColor'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureView.PreservesAspectRatio">
            <summary>
                <para>Returns whether the receiver preserves the aspect ratio of the video preview when drawing it.</para>
                <para>Original signature is '- (BOOL)preservesAspectRatio'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureView.PreviewBounds">
            <summary>
                <para>Returns the rectangle occupied by the video preview in the view.</para>
                <para>Original signature is '- (NSRect)previewBounds'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCaptureView.VideoPreviewConnection">
            <summary>
                <para>Returns the output connection being previewed by the receiver.</para>
                <para>Original signature is '- (QTCaptureConnection *)videoPreviewConnection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCaptureView.SetDelegate(System.Action{Monobjc.QuickTime.QTCaptureView.QTCaptureViewEventDispatcher})">
            <summary>
            Sets the delegate of the <see cref="T:Monobjc.QuickTime.QTCaptureView" /> instance.
            </summary>
            <param name="assignment">The assignment of delegation methods.</param>
        </member>
        <member name="T:Monobjc.QuickTime.QTCompressionOptions">
            <summary>
            Managed wrapper for QTCompressionOptions Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCompressionOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCompressionOptions" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCompressionOptions.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCompressionOptions" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTCompressionOptions.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTCompressionOptions" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTCompressionOptions.QTCompressionOptionsClass">
            <summary>
            Static field for a quick access to the QTCompressionOptions class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCompressionOptions.LocalizedCompressionOptionsSummary">
            <summary>
                <para>A localized summary of the receiver’s compression options.</para>
                <para>Original signature is '- (NSString *)localizedCompressionOptionsSummary'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCompressionOptions.LocalizedDisplayName">
            <summary>
                <para>A short localized name describing the receiver’s compression options.</para>
                <para>Original signature is '- (NSString *)localizedDisplayName'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTCompressionOptions.MediaType">
            <summary>
                <para>The media type on which the receiver’s compression options should be used.</para>
                <para>Original signature is '- (NSString *)mediaType'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTCompressionOptions.CompressionOptionsIdentifiersForMediaType(Monobjc.Cocoa.NSString)">
            <summary>
                <para>An array of identifiers that can be used to create compression options on the user’s computer.</para>
                <para>Original signature is '+ (QTCompressionOptions *)compressionOptionsWithIdentifier:(NSString *)identifier'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>An array of strings that can be used to create compression options with compressionOptionsWithIdentifier:.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCompressionOptions.CompressionOptionsWithIdentifier(Monobjc.Cocoa.NSString)">
            <summary>
                <para>A QTCompressionOptions instance configured with the options for the given identifier.</para>
                <para>Original signature is '+ (QTCompressionOptions *)compressionOptionsWithIdentifier:(NSString *)identifier'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>A compression options object with the appropriate compression options.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTCompressionOptions.IsEqualToCompressionOptions(Monobjc.QuickTime.QTCompressionOptions)">
            <summary>
                <para>Returns whether the receiver contains options identical to those in the given compression options object.</para>
                <para>Original signature is '- (BOOL)isEqualToCompressionOptions:(QTCompressionOptions *)compressionOptions'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>A localized string summarizing the receiver's compression options.</returns>
        </member>
        <member name="T:Monobjc.QuickTime.QTDataReference">
            <summary>
            Managed wrapper for QTDataReference Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.#ctor(System.IntPtr,Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithDataRef:(Handle )dataRef type:(NSString *)type'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.#ctor(Monobjc.Cocoa.NSData,Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithDataRefData:(NSData *)dataRefData type:(NSString *)type'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.#ctor(Monobjc.Cocoa.NSData)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithReferenceToData:(NSData *)data'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.#ctor(Monobjc.Cocoa.NSData,Monobjc.Cocoa.NSString,Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithReferenceToData:(NSData *)data name:(NSString *)name MIMEType:(NSString *)MIMEType'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.#ctor(Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithReferenceToFile:(NSString *)fileName'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.#ctor(Monobjc.Cocoa.NSURL)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithReferenceToURL:(NSURL *)url'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTDataReference" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTDataReference" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTDataReference" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTDataReference.QTDataReferenceClass">
            <summary>
            Static field for a quick access to the QTDataReference class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTDataReference.DataRef">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (Handle )dataRef'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTDataReference.DataRefData">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (NSData *)dataRefData'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTDataReference.DataRefType">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (NSString *)dataRefType'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTDataReference.MIMEType">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (NSString *)MIMEType'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTDataReference.Name">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (NSString *)name'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTDataReference.ReferenceData">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (NSData *)referenceData'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTDataReference.ReferenceFile">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (NSString *)referenceFile'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTDataReference.ReferenceURL">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (NSURL *)referenceURL'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.DataReferenceWithDataRefType(System.IntPtr,Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '+ (id)dataReferenceWithDataRef:( Handle)dataRef type:(NSString *)type'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.DataReferenceWithDataRefDataType(Monobjc.Cocoa.NSData,Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '+ (id)dataReferenceWithDataRefData:(NSData *)dataRefData type:(NSString *)type'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.DataReferenceWithReferenceToData(Monobjc.Cocoa.NSData)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '+ (id)dataReferenceWithReferenceToData:(NSData *)data'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.DataReferenceWithReferenceToDataNameMIMEType(Monobjc.Cocoa.NSData,Monobjc.Cocoa.NSString,Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '+ (id)dataReferenceWithReferenceToData:(NSData *)data name:(NSString *)name MIMEType:(NSString *)MIMEType'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.DataReferenceWithReferenceToFile(Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '+ (id)dataReferenceWithReferenceToFile:(NSString *)fileName'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.DataReferenceWithReferenceToURL(Monobjc.Cocoa.NSURL)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '+ (id)dataReferenceWithReferenceToURL:(NSURL *)url'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.InitWithDataRefType(System.IntPtr,Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithDataRef:(Handle )dataRef type:(NSString *)type'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.InitWithDataRefDataType(Monobjc.Cocoa.NSData,Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithDataRefData:(NSData *)dataRefData type:(NSString *)type'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.InitWithReferenceToData(Monobjc.Cocoa.NSData)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithReferenceToData:(NSData *)data'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.InitWithReferenceToDataNameMIMEType(Monobjc.Cocoa.NSData,Monobjc.Cocoa.NSString,Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithReferenceToData:(NSData *)data name:(NSString *)name MIMEType:(NSString *)MIMEType'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.InitWithReferenceToFile(Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithReferenceToFile:(NSString *)fileName'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTDataReference.InitWithReferenceToURL(Monobjc.Cocoa.NSURL)">
            <summary>
                <para>The following constants are Cocoa identifiers for the basic data reference types. One of these types would be returned, for instance, by this method: - (NString *) dataRefType.</para>
                <para>Original signature is '- (id)initWithReferenceToURL:(NSURL *)url'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTFormatDescription">
            <summary>
            Managed wrapper for QTFormatDescription Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTFormatDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTFormatDescription" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTFormatDescription.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTFormatDescription" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTFormatDescription.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTFormatDescription" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTFormatDescription.QTFormatDescriptionClass">
            <summary>
            Static field for a quick access to the QTFormatDescription class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTFormatDescription.FormatDescriptionAttributes">
            <summary>
                <para>Returns a dictionary of all attributes set for the receiver.</para>
                <para>Original signature is '- (NSDictionary *)formatDescriptionAttributes'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTFormatDescription.FormatType">
            <summary>
                <para>Returns the format type of the described media.</para>
                <para>Original signature is '- (UInt32)formatType'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTFormatDescription.LocalizedFormatSummary">
            <summary>
                <para>Returns a localized summary of the media format.</para>
                <para>Original signature is '- (NSString *)localizedFormatSummary'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTFormatDescription.MediaType">
            <summary>
                <para>Returns the media type of the described media.</para>
                <para>Original signature is '- (NSString *)mediaType'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTFormatDescription.QuickTimeSampleDescription">
            <summary>
                <para>Returns the media’s QuickTime SampleDescription.</para>
                <para>Original signature is '- (NSData *)quickTimeSampleDescription'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTFormatDescription.AttributeForKey(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns the current value of the format description attribute for the given key.</para>
                <para>Original signature is '- (id)attributeForKey:(NSString *)key'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>A localized string summarizing the media format.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTFormatDescription.IsEqualToFormatDescription(Monobjc.QuickTime.QTFormatDescription)">
            <summary>
                <para>Returns whether the receiver describes the same format as the given format description.</para>
                <para>Original signature is '- (BOOL)isEqualToFormatDescription:(QTFormatDescription *)formatDescription'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>A localized string summarizing the media format.</returns>
        </member>
        <member name="T:Monobjc.QuickTime.QTMedia">
            <summary>
            Managed wrapper for QTMedia Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMedia.#ctor(System.IntPtr,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>The following constants specify the media attributes that you can get and set using the mediaAttributes and setMediaAttributes methods. To get or set a single attribute, use attributeForKey: or setAttribute:.</para>
                <para>Original signature is '- (id)initWithQuickTimeMedia:(Media)media error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMedia.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMedia" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMedia.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMedia" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTMedia.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMedia" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeVideo">
            <summary>
                <para>Video media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeSound">
            <summary>
                <para>Sound media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeText">
            <summary>
                <para>Text media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeBase">
            <summary>
                <para>Base media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeMPEG">
            <summary>
                <para>MPEG media</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeMusic">
            <summary>
                <para>Music media</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeTimeCode">
            <summary>
                <para>Timecode media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeSprite">
            <summary>
                <para>Sprite media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeFlash">
            <summary>
                <para>Flash media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeMovie">
            <summary>
                <para>Movie media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeTween">
            <summary>
                <para>Tween media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaType3D">
            <summary>
                <para>3D media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeSkin">
            <summary>
                <para>Skin media</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeQTVR">
            <summary>
                <para>QuickTime VR media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeHint">
            <summary>
                <para>Hint media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeStream">
            <summary>
                <para>Stream media.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeMuxed">
            <summary>
                <para>Muxed media.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeQuartzComposer">
            <summary>
                <para>Quartz Composer media.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaCharacteristicVisual">
            <summary>
                <para>The media has video data. This is a BOOL.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaCharacteristicAudio">
            <summary>
                <para>The media has audio data. This is a BOOL.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaCharacteristicCanSendVideo">
            <summary>
                <para>The media can send visual data to another track. This is a BOOL.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaCharacteristicProvidesActions">
            <summary>
                <para>The media has actions. This is a BOOL.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaCharacteristicNonLinear">
            <summary>
                <para>The media is non-linear. This is a BOOL.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaCharacteristicCanStep">
            <summary>
                <para>The media can step. This is a BOOL.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaCharacteristicHasNoDuration">
            <summary>
                <para>The media has no duration. This is a BOOL.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaCharacteristicHasSkinData">
            <summary>
                <para>The media has skin data. This is a BOOL.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaCharacteristicProvidesKeyFocus">
            <summary>
                <para>Key events can be focused at the media. This is a BOOL.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaCharacteristicHasVideoFrameRate">
            <summary>
                <para>The media has a video frame rate. This is a BOOL.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaCreationTimeAttribute">
            <summary>
                <para>The creation time of a QTMedia object; the value for this key is of type NSDate.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaDurationAttribute">
            <summary>
                <para>The duration of a QTMedia object; the value for this key is of type NSValue, interpreted as a QTTime.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaModificationTimeAttribute">
            <summary>
                <para>The modification time of a QTMedia object; the value for this key is of type NSDate.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaSampleCountAttribute">
            <summary>
                <para>The media sample count; the value for this key is of type NSNumber, interpreted as a long.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaQualityAttribute">
            <summary>
                <para>The media quality; the value for this key is of type NSNumber, interpreted as a short.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTimeScaleAttribute">
            <summary>
                <para>The media time scale; the value for this key is of type NSNumber, interpreted as a long.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaTypeAttribute">
            <summary>
                <para>The media type; the value for this key is of type NSString; see below for the values this attribute can return.</para>
                <para>Available in Mac OS X v10.4 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMedia.QTMediaClass">
            <summary>
            Static field for a quick access to the QTMedia class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMedia.MediaAttributes">
            <summary>
                <para>The following constants specify the media attributes that you can get and set using the mediaAttributes and setMediaAttributes methods. To get or set a single attribute, use attributeForKey: or setAttribute:.</para>
                <para>Original signature is '- (NSDictionary *)mediaAttributes'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMedia.QuickTimeMedia">
            <summary>
                <para>The following constants specify the media attributes that you can get and set using the mediaAttributes and setMediaAttributes methods. To get or set a single attribute, use attributeForKey: or setAttribute:.</para>
                <para>Original signature is '- (Media)quickTimeMedia'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMedia.Track">
            <summary>
                <para>The following constants specify the media attributes that you can get and set using the mediaAttributes and setMediaAttributes methods. To get or set a single attribute, use attributeForKey: or setAttribute:.</para>
                <para>Original signature is '- (QTTrack *)track'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMedia.MediaWithQuickTimeMediaError(System.IntPtr,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>The following constants specify the media attributes that you can get and set using the mediaAttributes and setMediaAttributes methods. To get or set a single attribute, use attributeForKey: or setAttribute:.</para>
                <para>Original signature is '+ (id)mediaWithQuickTimeMedia:(Media)media error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMedia.AttributeForKey(Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants specify the media attributes that you can get and set using the mediaAttributes and setMediaAttributes methods. To get or set a single attribute, use attributeForKey: or setAttribute:.</para>
                <para>Original signature is '- (id)attributeForKey:(NSString *)attributeKey'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMedia.HasCharacteristic(Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants specify the media attributes that you can get and set using the mediaAttributes and setMediaAttributes methods. To get or set a single attribute, use attributeForKey: or setAttribute:.</para>
                <para>Original signature is '- (BOOL)hasCharacteristic:(NSString *)characteristic'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMedia.InitWithQuickTimeMediaError(System.IntPtr,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>The following constants specify the media attributes that you can get and set using the mediaAttributes and setMediaAttributes methods. To get or set a single attribute, use attributeForKey: or setAttribute:.</para>
                <para>Original signature is '- (id)initWithQuickTimeMedia:(Media)media error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMedia.SetAttributeForKey(Monobjc.Id,Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants specify the media attributes that you can get and set using the mediaAttributes and setMediaAttributes methods. To get or set a single attribute, use attributeForKey: or setAttribute:.</para>
                <para>Original signature is '- (void)setAttribute:(id)value forKey:(NSString *)attributeKey'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovie">
            <summary>
            Managed wrapper for QTMovie Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.#ctor(Monobjc.Cocoa.NSDictionary,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the attributes specified in attributes.</para>
                <para>Original signature is '-(id)initWithAttributes:(NSDictionary *)attributes error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.#ctor(Monobjc.Cocoa.NSData,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the data specified by data.</para>
                <para>Original signature is '-(id)initWithData:(NSData *)data error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.#ctor(Monobjc.QuickTime.QTDataReference,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the data reference setting specified by dataReference.</para>
                <para>Original signature is '-(id)initWithDataReference:(QTDataReference *)dataReference error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.#ctor(Monobjc.Cocoa.NSString,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the data in the file specified by the name fileName.</para>
                <para>Original signature is '-(id)initWithFile:(NSString *)fileName error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.#ctor(Monobjc.QuickTime.QTMovie,Monobjc.QuickTime.QTTimeRange,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with some or all of the data from an existing QTMovie object movie.</para>
                <para>Original signature is '-(id)initWithMovie:(QTMovie *)movie timeRange:(QTTimeRange)range error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.#ctor(Monobjc.Cocoa.NSPasteboard,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the contents of the pasteboard specified by pasteboard.</para>
                <para>Original signature is '-(id)initWithPasteboard:(NSPasteboard *)pasteboard error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.#ctor(System.IntPtr,System.Boolean,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the data from an existing QuickTime movie movie.</para>
                <para>Original signature is '-(id)initWithQuickTimeMovie:(Movie)movie disposeWhenDone:(BOOL)dispose error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.#ctor(Monobjc.Cocoa.NSURL,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the data in the URL specified by url.</para>
                <para>Original signature is '-(id)initWithURL:(NSURL *)url error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMovie" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMovie" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMovie" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher">
            <summary>
            Inner event handler that is exposed to the Objective-C runtime and relays delegate messages to listeners.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.QTMovieEventDispatcherClass">
            <summary>
            Static field for a quick access to the QTMovieEventDispatcher class.
            </summary>
        </member>
        <member name="E:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.ExternalMovie">
            <summary>
                <para>This method is called, if implemented by a QTMovie delegate object, when an external movie needs to be found (usually for a wired action targeted at an external movie).</para>
                <para>Original signature is '-(QTMovie *)externalMovie:(NSDictionary *)dictionary'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="E:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.MovieLinkToURL">
            <summary>
                <para>Called to handle the mcAction mcActionLinkToURL.</para>
                <para>Original signature is '-(BOOL)movie:(QTMovie *)movielinkToURL :(NSURL *)url'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="E:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.MovieShouldContinueOperationWithPhaseAtPercentWithAttributes">
            <summary>
                <para>If implemented, this method is called periodically during lengthy operations (such as exporting a movie).</para>
                <para>Original signature is '-(BOOL)movie:(QTMovie *)movieshouldContinueOperation :(NSString *)opwithPhase :( QTMovieOperationPhase)phaseatPercent :(NSNumber *)percentwithAttributes :(NSDictionary *)attributes'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="E:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.MovieShouldTask">
            <summary>
                <para>If a QTMovie object has a delegate and that delegate implements this method, that method will be called before QTKit performs the standard idle processing on a movie.</para>
                <para>Original signature is '-(BOOL)movieShouldTask:(id)movie'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.RespondsToSelector(System.IntPtr)">
            <summary>
                <para>Returns a Boolean value that indicates whether the receiver implements or inherits a method that can respond to a specified message.</para>
                <para>Original signature is '- (BOOL)respondsToSelector:(SEL)aSelector'</para>
                <para>Available in Mac OS X v10.0 and later.</para>
            </summary>
            <param name="aSelector">A selector that identifies a message.</param>
            <returns>
            YES if the receiver implements or inherits a method that can respond to aSelector, otherwise NO.
            </returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.ExternalMovieMessage(Monobjc.Cocoa.NSDictionary)">
            <summary>
                <para>This method is called, if implemented by a QTMovie delegate object, when an external movie needs to be found (usually for a wired action targeted at an external movie).</para>
                <para>Original signature is '-(QTMovie *)externalMovie:(NSDictionary *)dictionary'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.MovieLinkToURLMessage(Monobjc.QuickTime.QTMovie,Monobjc.Cocoa.NSURL)">
            <summary>
                <para>Called to handle the mcAction mcActionLinkToURL.</para>
                <para>Original signature is '-(BOOL)movie:(QTMovie *)movielinkToURL :(NSURL *)url'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.MovieShouldContinueOperationWithPhaseAtPercentWithAttributesMessage(Monobjc.QuickTime.QTMovie,Monobjc.Cocoa.NSString,Monobjc.QuickTime.QTMovieOperationPhase,Monobjc.Cocoa.NSNumber,Monobjc.Cocoa.NSDictionary)">
            <summary>
                <para>If implemented, this method is called periodically during lengthy operations (such as exporting a movie).</para>
                <para>Original signature is '-(BOOL)movie:(QTMovie *)movieshouldContinueOperation :(NSString *)opwithPhase :( QTMovieOperationPhase)phaseatPercent :(NSNumber *)percentwithAttributes :(NSDictionary *)attributes'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.MovieShouldTaskMessage(Monobjc.Id)">
            <summary>
                <para>If a QTMovie object has a delegate and that delegate implements this method, that method will be called before QTKit performs the standard idle processing on a movie.</para>
                <para>Original signature is '-(BOOL)movieShouldTask:(id)movie'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher.Dealloc">
            <summary>
            Deallocates the memory occupied by the receiver.
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovie.ExternalMovieEventHandler">
            <summary>
                <para>This method is called, if implemented by a QTMovie delegate object, when an external movie needs to be found (usually for a wired action targeted at an external movie).</para>
                <para>Original signature is '-(QTMovie *)externalMovie:(NSDictionary *)dictionary'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovie.MovieLinkToURLEventHandler">
            <summary>
                <para>Called to handle the mcAction mcActionLinkToURL.</para>
                <para>Original signature is '-(BOOL)movie:(QTMovie *)movielinkToURL :(NSURL *)url'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovie.MovieShouldContinueOperationWithPhaseAtPercentWithAttributesEventHandler">
            <summary>
                <para>If implemented, this method is called periodically during lengthy operations (such as exporting a movie).</para>
                <para>Original signature is '-(BOOL)movie:(QTMovie *)movieshouldContinueOperation :(NSString *)opwithPhase :( QTMovieOperationPhase)phaseatPercent :(NSNumber *)percentwithAttributes :(NSDictionary *)attributes'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovie.MovieShouldTaskEventHandler">
            <summary>
                <para>If a QTMovie object has a delegate and that delegate implements this method, that method will be called before QTKit performs the standard idle processing on a movie.</para>
                <para>Original signature is '-(BOOL)movieShouldTask:(id)movie'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieActiveSegmentAttribute">
            <summary>
                <para>The active segment of a QTMovie object; the value for this key is of type NSValue, interpreted as a QTTimeRange structure. (Deprecated. This constant is available in Mac OS X 10.4 and later, but deprecated in Mac OS X 10.5.)</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieApertureModeAttribute">
            <summary>
                <para>Sets the aperture mode attribute on a QTMovie object to indicate whether aspect ratio and clean aperture correction should be performed. When a movie is in clean, production, or encoded pixels aperture mode, each track's dimensions are overridden by special dimensions for that mode. The original track dimensions are preserved and can be restored by setting the movie into classic aperture mode. Aperture modes are not saved in movies. The associated value is of type NSString and is assumed to be one of the following strings:</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieAutoAlternatesAttribute">
            <summary>
                <para>The auto-alternate state of a QTMovie object. The value for this key is of type NSNumber, interpreted as a BOOL.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieCopyrightAttribute">
            <summary>
                <para>The copyright string of a QTMovie object; the value for this key is of type NSString.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieCreationTimeAttribute">
            <summary>
                <para>The creation time of a QTMovie object; the value for this key is of type NSDate.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieCurrentSizeAttribute">
            <summary>
                <para>The current size of a QTMovie object; the value for this key is of type NSValue, interpreted as an NSSize structure.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieCurrentTimeAttribute">
            <summary>
                <para>The current time of a QTMovie object; the value for this key is of type NSValue, interpreted as a QTTime structure.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieDataSizeAttribute">
            <summary>
                <para>The data size of a QTMovie. The value for this key is of type NSNumber, which is interpreted as a long long.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieDelegateAttribute">
            <summary>
                <para>The delegate for a QTMovie object. The value for this key is of type NSObject.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieDisplayNameAttribute">
            <summary>
                <para>The display name of a QTMovie object. A display name is stored as user data in a movie file and hence may differ from the base name of the movie�s filename or URL. The value for this key is of type NSString.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieDontInteractWithUserAttribute">
            <summary>
                <para>When set in a dictionary passed to movieWithAttributes or initWithAttributes, this prevents QuickTime from interacting with the user during movie initialization. The value for this key is of type NSNumber, interpreted as a BOOL.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieDurationAttribute">
            <summary>
                <para>The duration of a QTMovie object; the value for this key is of type NSValue, interpreted as a QTTime structure.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieEditableAttribute">
            <summary>
                <para>The editable setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie can be edited.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieFileNameAttribute">
            <summary>
                <para>The file name string of a QTMovie object; the value for this key is of type NSString.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieHasApertureModeDimensionsAttribute">
            <summary>
                <para>The aperture mode dimensions set on any track in this QTMovie object, even if those dimemsions are all identical to the classic dimensions (as is the case for content with square pixels and no edge-processing region). The value for this key is of type NSNumber, interpreted as a BOOL.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieHasAudioAttribute">
            <summary>
                <para>The audio data setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie contains audio data.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieHasDurationAttribute">
            <summary>
                <para>The duration setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie has a duration. (Some types of movies, for instance QuickTime VR movies, have no duration.)</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieHasVideoAttribute">
            <summary>
                <para>The video data setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie contains video data.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieIsActiveAttribute">
            <summary>
                <para>The active setting; the value for this key is of type NSNumber, interpreted as a BOOL.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieIsInteractiveAttribute">
            <summary>
                <para>The interactive setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie is interactive.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieIsLinearAttribute">
            <summary>
                <para>The linear setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie is linear, as opposed to a non-linear QuickTime VR movie.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieIsSteppableAttribute">
            <summary>
                <para>The steppable setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie can step from frame to frame.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieLoadStateAttribute">
            <summary>
                <para>The load state value; the value for this key is of type NSNumber, interpreted as a long.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieLoopsAttribute">
            <summary>
                <para>The looping setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie is set to loop.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieLoopsBackAndForthAttribute">
            <summary>
                <para>The palindrome looping setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie is set to loop back and forth. Note that QTMovieLoopsAttribute and QTMovieLoopsBackAndForthAttribute are independent and indeed exclusive. QTMovieLoopsAttribute is used to get and set the state of normal looping; QTMovieLoopsBackAndForthAttribute is used to get and set the state of palindrome looping.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieModificationTimeAttribute">
            <summary>
                <para>The modification time of a QTMovie object; the value for this key is of type NSDate.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieMutedAttribute">
            <summary>
                <para>The mute setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie volume is muted.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieNaturalSizeAttribute">
            <summary>
                <para>The natural size of a QTMovie object; the value for this key is of type NSValue, interpreted as an NSSize structure.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMoviePlaysAllFramesAttribute">
            <summary>
                <para>The play-all-frames setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie will play all frames.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMoviePlaysSelectionOnlyAttribute">
            <summary>
                <para>The play-selection setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie will play only the current selection.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMoviePosterTimeAttribute">
            <summary>
                <para>The movie poster time of a QTMovie object; the value for this key is of type NSValue, interpreted as a QTTime structure.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMoviePreferredMutedAttribute">
            <summary>
                <para>The preferred mute setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie preferred mute setting is muted.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMoviePreferredRateAttribute">
            <summary>
                <para>The preferred rate; the value for this key is of type NSNumber, interpreted as a float.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMoviePreferredVolumeAttribute">
            <summary>
                <para>The preferred volume; the value for this key is of type NSNumber, interpreted as a float.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMoviePreviewModeAttribute">
            <summary>
                <para>The preview mode setting; the value for this key is of type NSNumber, interpreted as a BOOL. This value is YES if the movie is in preview mode.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMoviePreviewRangeAttribute">
            <summary>
                <para>The preview range of a QTMovie object; the value for this key is of type NSValue, interpreted as a QTTimeRange structure.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieRateAttribute">
            <summary>
                <para>The movie rate; the value for this key is of type NSNumber, interpreted as a float.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieRateChangesPreservePitchAttribute">
            <summary>
                <para>When the playback rate is not unity, audio must be resampled in order to play at the new rate. The default resampling affects the pitch of the audio (for example, playing at 2x speed raises the pitch by an octave, 1/2x lowers an octave). If this property is set on the Movie, an alternative algorithm is used, which alters the speed without changing the pitch. As this is more computationally expensive, this property may be silently ignored on some slow CPUs.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieSelectionAttribute">
            <summary>
                <para>The selection range of a QTMovie object; the value for this key is of type NSValue, interpreted as a QTTimeRange structure.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieTimeScaleAttribute">
            <summary>
                <para>The movie time scale; the value for this key is of type NSNumber, interpreted as a long. In Mac OS X 10.5 and later, this attribute is gettable and settable. In general, you should set this attribute only on newly-created movies or on movies that have not been edited. Also, you should only increase the time scale value, and you should try to use integer multiples of the existing time scale. In earlier versions of Mac OS X, this attribute is gettable only.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieURLAttribute">
            <summary>
                <para>The URL of a QTMovie object; the value for this key is of type NSURL.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieVolumeAttribute">
            <summary>
                <para>The movie volume; the value for this key is of type NSNumber, interpreted as a float.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieApertureModeDidChangeNotification">
            <summary>
                <para>Issued when the aperture mode of the target QTMovie object changes.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieChapterDidChangeNotification">
            <summary>
                <para>Issued when the chapter associated with QTMovie changes.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieChapterListDidChangeNotification">
            <summary>
                <para>Issued when the chapter list associated with QTMovie changes.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieCloseWindowRequestNotification">
            <summary>
                <para>Sent when a request is made to close the movie�s window.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieDidEndNotification">
            <summary>
                <para>Sent when the movie is �done� or at its end.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieEditabilityDidChangeNotification">
            <summary>
                <para>Sent when the editable state of a movie has changed.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieEditedNotification">
            <summary>
                <para>Sent when a movie has been edited.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieEnterFullScreenRequestNotification">
            <summary>
                <para>Sent when a request is made to play back a movie in full screen mode.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieExitFullScreenRequestNotification">
            <summary>
                <para>Sent when a request is made to play back a movie in normal windowed mode.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieLoadStateDidChangeNotification">
            <summary>
                <para>Sent when the load state of a movie has changed.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieLoopModeDidChangeNotification">
            <summary>
                <para>Sent when a change is made in a movie�s looping mode.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieMessageStringPostedNotification">
            <summary>
                <para>Sent when a movie message has been received by the movie controller.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieRateDidChangeNotification">
            <summary>
                <para>Sent when the rate of a movie has changed.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieSelectionDidChangeNotification">
            <summary>
                <para>Sent when the selection of a movie has changed.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieSizeDidChangeNotification">
            <summary>
                <para>Sent when the size of a movie has changed.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieStatusStringPostedNotification">
            <summary>
                <para>Status messages can be sent by QuickTime�s streaming components or by any code that wants to display a message in the movie controller bar status area.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieTimeDidChangeNotification">
            <summary>
                <para>Sent when the time in a movie has changed.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieVolumeDidChangeNotification">
            <summary>
                <para>Sent when the volume of a movie has changed.</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovie.QTMovieClass">
            <summary>
            Static field for a quick access to the QTMovie class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.Movie">
            <summary>
                <para>Creates an empty QTMovie object.</para>
                <para>Original signature is '+ (id)movie'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.MovieUnfilteredFileTypes">
            <summary>
                <para>Returns an array of file types that can be used to initialize a QTMovie object.</para>
                <para>Original signature is '+ (NSArray *)movieUnfilteredFileTypes'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.MovieUnfilteredPasteboardTypes">
            <summary>
                <para>Returns an array of pasteboard types that can be used to initialize a QTMovie object.</para>
                <para>Original signature is '+ (NSArray *)movieUnfilteredPasteboardTypes'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.CanUpdateMovieFile">
            <summary>
                <para>Indicates whether a movie file can be updated with changes made to the movie object.</para>
                <para>Original signature is '- (BOOL)canUpdateMovieFile'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.ChapterCount">
            <summary>
                <para>Returns the number of chapters in the receiver, or 0 if there are no chapters.</para>
                <para>Original signature is '- (NSInteger )chapterCount'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.Chapters">
            <summary>
                <para>Returns an NSArray containing information about the chapters in the receiver.</para>
                <para>Original signature is '- (NSArray *)chapters'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.CurrentFrameImage">
            <summary>
                <para>Returns an NSImage for the frame at the current time in a QTMovie.</para>
                <para>Original signature is '- (NSImage *)currentFrameImage'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.CurrentTime">
            <summary>
                <para>Returns the current time of a QTMovie object as a structure of type QTTime.</para>
                <para>Original signature is '- (QTTime )currentTime'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.Delegate">
            <summary>
                <para>Returns the delegate of a QTMovie object.</para>
                <para>Original signature is '- (id)delegate'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.Duration">
            <summary>
                <para>Returns the duration of a QTMovie object as a structure of type QTTime.</para>
                <para>Original signature is '- (QTTime )duration'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.HasChapters">
            <summary>
                <para>Returns YES if the receiver has chapters, NO otherwise.</para>
                <para>Original signature is '- (BOOL)hasChapters'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.Idling">
            <summary>
                <para>Returns the current idling state of a QTMovie object.</para>
                <para>Original signature is '- (BOOL)idling'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.MovieAttributes">
            <summary>
                <para>Returns a dictionary containing the current values of all defined movie attributes.</para>
                <para>Original signature is '- (NSDictionary *)movieAttributes'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.MovieFormatRepresentation">
            <summary>
                <para>Returns the movie’s data in an NSData object.</para>
                <para>Original signature is '- (NSData *)movieFormatRepresentation'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.Muted">
            <summary>
                <para>Returns the movie’s mute setting.</para>
                <para>Original signature is '- (BOOL)muted'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.PosterImage">
            <summary>
                <para>Returns an NSImage for the poster frame of a QTMovie.</para>
                <para>Original signature is '- (NSImage *)posterImage'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.QuickTimeMovie">
            <summary>
                <para>Returns the QuickTime movie associated with a QTMovie object.</para>
                <para>Original signature is '- (Movie)quickTimeMovie'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.QuickTimeMovieController">
            <summary>
                <para>Returns the QuickTime movie controller associated with a QTMovie object.</para>
                <para>Original signature is '- (MovieController)quickTimeMovieController'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.Rate">
            <summary>
                <para>Returns the current rate of a QTMovie object.</para>
                <para>Original signature is '- (float)rate'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.SelectionDuration">
            <summary>
                <para>Returns the duration of the movie’s current selection as a QTTime structure.</para>
                <para>Original signature is '- (QTTime )selectionDuration'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.SelectionEnd">
            <summary>
                <para>Returns the end point of the movie’s current selection as a QTTime structure.</para>
                <para>Original signature is '- (QTTime )selectionEnd'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.SelectionStart">
            <summary>
                <para>Returns the start time of the movie’s current selection as a QTTime structure.</para>
                <para>Original signature is '- (QTTime )selectionStart'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.Tracks">
            <summary>
                <para>Returns an array of QTTrack objects associated with the receiver.</para>
                <para>Original signature is '- (NSArray *)tracks'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovie.Volume">
            <summary>
                <para>Returns the movie’s volume as a scalar value of type float.</para>
                <para>Original signature is '- (float)volume'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.CanInitWithDataReference(Monobjc.QuickTime.QTDataReference)">
            <summary>
                <para>Returns YES if the specified data reference can be used to initialize a QTMovie object.</para>
                <para>Original signature is '+ (BOOL)canInitWithDataReference:(QTDataReference*)dataReference'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.CanInitWithFile(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns YES if the contents of the specified file can be used to initialize a QTMovie object.</para>
                <para>Original signature is '+ (BOOL)canInitWithFile:(NSString *)fileName'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.CanInitWithPasteboard(Monobjc.Cocoa.NSPasteboard)">
            <summary>
                <para>Returns YES if the contents of the specified pasteboard can be used to initialize a QTMovie object.</para>
                <para>Original signature is '+ (BOOL)canInitWithPasteboard:(NSPasteboard *)pasteboard'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.CanInitWithURL(Monobjc.Cocoa.NSURL)">
            <summary>
                <para>Returns YES if the contents of the specified URL can be used to initialize a QTMovie object.</para>
                <para>Original signature is '+ (BOOL)canInitWithURL:(NSURL *)url'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.EnterQTKitOnThread">
            <summary>
                <para>Performs any QuickTime-specific initialization for the current (non-main) thread; must be paired with a call to exitQTKitOnThread.</para>
                <para>Original signature is '+ (void)enterQTKitOnThread'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.EnterQTKitOnThreadDisablingThreadSafetyProtection">
            <summary>
                <para>Performs any QuickTime-specific initialization for the current (non-main) thread, allowing non-threadsafe components; must be paired with a call to exitQTKitOnThread.</para>
                <para>Original signature is '+ (void)enterQTKitOnThreadDisablingThreadSafetyProtection'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.ExitQTKitOnThread">
            <summary>
                <para>Performs any QuickTime-specific shut-down for the current (non-main) thread; must be paired with a call to enterQTKitOnThread or enterQTKitOnThreadDisablingThreadSafetyProtection.</para>
                <para>Original signature is '+ (void)exitQTKitOnThread'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.MovieFileTypes(Monobjc.QuickTime.QTMovieTypeOptions)">
            <summary>
                <para>Returns an array of file types that can be opened as QuickTime movies.</para>
                <para>Original signature is '+ (NSArray *)movieFileTypes:( QTMovieTypeOptions)types'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.MovieNamedError(Monobjc.Cocoa.NSString,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Creates a QTMovie object initialized with the data from the QuickTime movie of the specified name in the application’s bundle.</para>
                <para>Original signature is '+ (id)movieNamed:(NSString *)name error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.MovieTypesWithOptions(Monobjc.QuickTime.QTMovieFileTypeOptions)">
            <summary>
                <para>Returns an array of UTIs that QuickTime can open.</para>
                <para>Original signature is '+ (NSArray *)movieTypesWithOptions:( QTMovieFileTypeOptions)types'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.MovieWithAttributesError(Monobjc.Cocoa.NSDictionary,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Creates a QTMovie object initialized with the attributes specified in attributes.</para>
                <para>Original signature is '+ (id)movieWithAttributes:(NSDictionary *)attributes error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.MovieWithDataError(Monobjc.Cocoa.NSData,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Creates a QTMovie object initialized with the data specified by data.</para>
                <para>Original signature is '+ (id)movieWithData:(NSData *)data error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.MovieWithDataReferenceError(Monobjc.QuickTime.QTDataReference,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Creates a QTMovie object intitalized with the data specified by the data reference dataReference.</para>
                <para>Original signature is '+ (id)movieWithDataReference:(QTDataReference *)dataReference error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.MovieWithFileError(Monobjc.Cocoa.NSString,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Creates a QTMovie object initialized with the data in the file specified by the name fileName.</para>
                <para>Original signature is '+ (id)movieWithFile:(NSString *)fileName error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.MovieWithPasteboardError(Monobjc.Cocoa.NSPasteboard,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Creates a QTMovie object initialized with the contents of the pasteboard specified by pasteboard.</para>
                <para>Original signature is '+ (id)movieWithPasteboard:(NSPasteboard *)pasteboard error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.MovieWithQuickTimeMovieDisposeWhenDoneError(System.IntPtr,System.Boolean,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Creates a QTMovie object initialized with the data from an existing QuickTime movie movie.</para>
                <para>Original signature is '+ (id)movieWithQuickTimeMovie:(Movie)movie disposeWhenDone:(BOOL)dispose error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.MovieWithURLError(Monobjc.Cocoa.NSURL,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Creates a QTMovie object initialized with the data in the URL specified by url.</para>
                <para>Original signature is '+ (id)movieWithURL:(NSURL *)url error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.AddChapters(Monobjc.Cocoa.NSArray,Monobjc.Cocoa.NSDictionary,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Adds chapters to the receiver using the information specified in the chapters array. </para>
                <para>Original signature is '- (void)addChapters:(NSArray *)chapters withAttributes:(NSDictionary *)attributes error:(NSError **)errorPtr'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.AddImageForDurationWithAttributes(Monobjc.Cocoa.NSImage,Monobjc.QuickTime.QTTime,Monobjc.Cocoa.NSDictionary)">
            <summary>
                <para>Adds an image for the specified duration to the receiver, using attributes specified in the attributes dictionary.</para>
                <para>Original signature is '- (void)addImage:(NSImage *)image forDuration:( QTTime)duration withAttributes:(NSDictionary *)attributes'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.AppendSelectionFromMovie(Monobjc.Id)">
            <summary>
                <para>Appends to a QTMovie the current selection in movie.</para>
                <para>Original signature is '- (void)appendSelectionFromMovie:(id)movie'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.AttributeForKey(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns the current value of the movie attribute attributeKey.</para>
                <para>Original signature is '- (id)attributeForKey:(NSString *)attributeKey'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.Autoplay">
            <summary>
                <para>Sets a movie to start playing when a sufficient amount of media data is available.</para>
                <para>Original signature is '- (void)autoplay'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.ChapterIndexForTime(Monobjc.QuickTime.QTTime)">
            <summary>
                <para>Returns the 0-based index of the chapter that contains the specified movie time.</para>
                <para>Original signature is '- (NSInteger )chapterIndexForTime:(QTTime )time'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.DeleteSegment(Monobjc.QuickTime.QTTimeRange)">
            <summary>
                <para>Deletes from a QTMovie the segment delimited by segment.</para>
                <para>Original signature is '- (void)deleteSegment:(QTTimeRange)segment'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.FrameImageAtTime(Monobjc.QuickTime.QTTime)">
            <summary>
                <para>Returns an NSImage for the frame at the time time in a QTMovie.</para>
                <para>Original signature is '- (NSImage *)frameImageAtTime:(QTTime )time'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.FrameImageAtTimeWithAttributesError(Monobjc.QuickTime.QTTime,Monobjc.Cocoa.NSDictionary,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Returns an NSImage*, CIImage*, CGImageRef, CVPixelBufferRef, or CVOpenGLTextureRef for the movie image at the specified time</para>
                <para>Original signature is '- (void *)frameImageAtTime:( QTTime)time withAttributes:(NSDictionary *)attributes error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.GenerateApertureModeDimensions">
            <summary>
                <para>Adds information to a QTMovie needed to support aperture modes for tracks created with applications and/or versions of QuickTime that did not support aperture mode dimensions.</para>
                <para>Original signature is '- (void)generateApertureModeDimensions'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.GotoBeginning">
            <summary>
                <para>Repositions the play position to the beginning of the movie.</para>
                <para>Original signature is '- (void)gotoBeginning'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.GotoEnd">
            <summary>
                <para>Repositions the play position to the end of the movie.</para>
                <para>Original signature is '- (void)gotoEnd'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.GotoNextSelectionPoint">
            <summary>
                <para>Repositions the movie to the next selection point.</para>
                <para>Original signature is '- (void)gotoNextSelectionPoint'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.GotoPosterFrame">
            <summary>
                <para>Repositions the play position to the movie’s poster time.</para>
                <para>Original signature is '- (void)gotoPosterFrame'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.GotoPreviousSelectionPoint">
            <summary>
                <para>Repositions the movie to the previous selection point.</para>
                <para>Original signature is '- (void)gotoPreviousSelectionPoint'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InitToWritableDataError(Monobjc.Cocoa.NSMutableData,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Useful for directly passing filenames and data objects. The QTMovie returned by this method is editable.</para>
                <para>Original signature is '- (id)initToWritableData:(NSMutableData *)data error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InitToWritableDataReferenceError(Monobjc.QuickTime.QTDataReference,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Creates a new storage container at the location specified by dataReference and returns a QTMovie object that has that container as its default data reference.</para>
                <para>Original signature is '- (id)initToWritableDataReference:(QTDataReference *)dataReference error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InitToWritableFileError(Monobjc.Cocoa.NSString,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Useful for directly passing filenames and data objects. The QTMovie returned by this method is editable.</para>
                <para>Original signature is '- (id)initToWritableFile:(NSString *)filename error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InitWithAttributesError(Monobjc.Cocoa.NSDictionary,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the attributes specified in attributes.</para>
                <para>Original signature is '- (id)initWithAttributes:(NSDictionary *)attributes error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InitWithDataError(Monobjc.Cocoa.NSData,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the data specified by data.</para>
                <para>Original signature is '- (id)initWithData:(NSData *)data error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InitWithDataReferenceError(Monobjc.QuickTime.QTDataReference,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the data reference setting specified by dataReference.</para>
                <para>Original signature is '- (id)initWithDataReference:(QTDataReference *)dataReference error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InitWithFileError(Monobjc.Cocoa.NSString,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the data in the file specified by the name fileName.</para>
                <para>Original signature is '- (id)initWithFile:(NSString *)fileName error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InitWithMovieTimeRangeError(Monobjc.QuickTime.QTMovie,Monobjc.QuickTime.QTTimeRange,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with some or all of the data from an existing QTMovie object movie.</para>
                <para>Original signature is '- (id)initWithMovie:(QTMovie *)movie timeRange:(QTTimeRange)range error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InitWithPasteboardError(Monobjc.Cocoa.NSPasteboard,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the contents of the pasteboard specified by pasteboard.</para>
                <para>Original signature is '- (id)initWithPasteboard:(NSPasteboard *)pasteboard error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InitWithQuickTimeMovieDisposeWhenDoneError(System.IntPtr,System.Boolean,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the data from an existing QuickTime movie movie.</para>
                <para>Original signature is '- (id)initWithQuickTimeMovie:(Movie)movie disposeWhenDone:(BOOL)dispose error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InitWithURLError(Monobjc.Cocoa.NSURL,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Initializes a QTMovie object with the data in the URL specified by url.</para>
                <para>Original signature is '- (id)initWithURL:(NSURL *)url error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InsertEmptySegmentAt(Monobjc.QuickTime.QTTimeRange)">
            <summary>
                <para>inserts into a QTMovie an empty segment delimited by the range range.</para>
                <para>Original signature is '- (void)insertEmptySegmentAt:(QTTimeRange)range'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InsertSegmentOfMovieFromRangeScaledToRange(Monobjc.QuickTime.QTMovie,Monobjc.QuickTime.QTTimeRange,Monobjc.QuickTime.QTTimeRange)">
            <summary>
                <para>Inserts the specified segment from the movie into the receiver, scaled to the range dstRange.</para>
                <para>Original signature is '- (void)insertSegmentOfMovie:(QTMovie *)movie fromRange:(QTTimeRange)srcRange scaledToRange:(QTTimeRange)dstRange'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.InsertSegmentOfMovieTimeRangeAtTime(Monobjc.QuickTime.QTMovie,Monobjc.QuickTime.QTTimeRange,Monobjc.QuickTime.QTTime)">
            <summary>
                <para>Inserts into a QTMovie at time time the selection in movie delimited by the time range range.</para>
                <para>Original signature is '- (void)insertSegmentOfMovie:(QTMovie *)movie timeRange:(QTTimeRange)range atTime:(QTTime )time'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.MovieWithTimeRangeError(Monobjc.QuickTime.QTTimeRange,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Returns a QTMovie object whose data is the data in the specified time range.</para>
                <para>Original signature is '- (id)movieWithTimeRange:(QTTimeRange)range error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.Play">
            <summary>
                <para>Plays the movie.</para>
                <para>Original signature is '- (void)play'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.RemoveApertureModeDimensions">
            <summary>
                <para>Removes aperture mode dimension information from a movie's tracks.</para>
                <para>Original signature is '- (void)removeApertureModeDimensions'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.ReplaceSelectionWithSelectionFromMovie(Monobjc.Id)">
            <summary>
                <para>Replaces the current selection in a QTMovie with the current selection in movie.</para>
                <para>Original signature is '- (void)replaceSelectionWithSelectionFromMovie:(id)movie'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.ScaleSegmentNewDuration(Monobjc.QuickTime.QTTimeRange,Monobjc.QuickTime.QTTime)">
            <summary>
                <para>Scales the QTMovie segment delimited by the segment segment so that it will have the new duration newDuration.</para>
                <para>Original signature is '- (void)scaleSegment:(QTTimeRange)segment newDuration:( QTTime)newDuration'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.SetAttributeForKey(Monobjc.Id,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Set the movie attribute attributeKey to the value specified by the value parameter.</para>
                <para>Original signature is '- (void)setAttribute:(id)value forKey:(NS String *)attributeKey'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.StartTimeOfChapter(System.Int32)">
            <summary>
                <para>Returns a QTTime structure that is the start time of the chapter having the specified 0-based index in the list of chapters.</para>
                <para>Original signature is '- (QTTime )startTimeOfChapter:(NSInteger )chapterIndex'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.StepBackward">
            <summary>
                <para>Sets the movie backward a single frame.</para>
                <para>Original signature is '- (void)stepBackward'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.StepForward">
            <summary>
                <para>Sets the movie forward a single frame.</para>
                <para>Original signature is '- (void)stepForward'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.Stop">
            <summary>
                <para>Stops the movie playing.</para>
                <para>Original signature is '- (void)stop'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.TracksOfMediaType(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns an array of tracks with the specified media type.</para>
                <para>Original signature is '- (NSArray *)tracksOfMediaType:(NSString *)type'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.WriteToFileWithAttributes(Monobjc.Cocoa.NSString,Monobjc.Cocoa.NSDictionary)">
            <summary>
                <para>Returns YES if the movie file was successfully created and NO otherwise.</para>
                <para>Original signature is '- (BOOL)writeToFile:(NSString *)fileNamewithAttributes :(NSDictionary *)attributes'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.WriteToFileWithAttributesError(Monobjc.Cocoa.NSString,Monobjc.Cocoa.NSDictionary,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Returns an NSError object if an error occurs and if errorPtr is non-NULL.</para>
                <para>Original signature is '- (BOOL)writeToFile:(NSString *)fileName withAttributes:(NSDictionary *)attributes error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.AttachToCurrentThread">
            <summary>
                <para>Attaches the receiver to the current thread; returns YES if successful, NO otherwise.</para>
                <para>Original signature is '- (BOOL)attachToCurrentThread'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.DetachFromCurrentThread">
            <summary>
                <para>Detaches the receiver from the current thread; returns YES if successful, NO otherwise.</para>
                <para>Original signature is '- (BOOL)detachFromCurrentThread'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.RemoveChapters">
            <summary>
                <para> Removes any existing chapters from the receiver.</para>
                <para>Original signature is '- (BOOL)removeChapters'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.UpdateMovieFile">
            <summary>
                <para>Updates the movie file of a QTMovie.</para>
                <para>Original signature is '- (BOOL)updateMovieFile'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovie.SetDelegate(System.Action{Monobjc.QuickTime.QTMovie.QTMovieEventDispatcher})">
            <summary>
            Sets the delegate of the <see cref="T:Monobjc.QuickTime.QTMovie" /> instance.
            </summary>
            <param name="assignment">The assignment of delegation methods.</param>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovieFileTypeOptions">
            <summary>
            The following values can be used to include some or all of the file types that are normally excluded:
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieFileTypeOptions.QTIncludeStillImageTypes">
            <summary>
                <para>This value adds to the array all file types for still images that can be opened using a graphics importer.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieFileTypeOptions.QTIncludeTranslatableTypes">
            <summary>
                <para>This value adds to the array all file types for files that can be opened using a movie importer but for which a new file must be created.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieFileTypeOptions.QTIncludeAggressiveTypes">
            <summary>
                <para>This value adds to the array all file types for files that can be opened using a movie importer but that are not commonly used in connection with movies (for instance, text or HTML files).</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieFileTypeOptions.QTIncludeCommonTypes">
            <summary>
                <para>This value adds to the array all common file types that QuickTime can open in place on the current system.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieFileTypeOptions.QTIncludeAllTypes">
            <summary>
                <para>This value adds to the array all file types that QuickTime can open on the current system, using any available movie or graphics importer.</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovieLayer">
            <summary>
            Generated from the "QTMovieLayer Reference" documentation.
            </summary>
            <summary>
            Managed wrapper for QTMovieLayer Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieLayer.#ctor(Monobjc.Id)">
            <summary>
                <para>Override to copy or initialize custom fields of the specified layer.</para>
                <para>Original signature is '- (id)initWithLayer:(id)layer'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMovieLayer" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieLayer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMovieLayer" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieLayer.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMovieLayer" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieLayer.QTMovieLayerClass">
            <summary>
            Static field for a quick access to the QTMovieLayer class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieLayer.Movie">
            <summary>
            Returns the movie associated with a QTMovieLayer object.
            </summary>
            <remarks>Original signature is '- (QTMovie *)movie'</remarks>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieLayer.LayerWithMovie(Monobjc.QuickTime.QTMovie)">
            <summary>
            Creates an autoreleased QTMovieLayer associated with the specified QTMovie object.
            </summary>
            <remarks>Original signature is '+ (id)layerWithMovie:(QTMovie *)movie'</remarks>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieLayer.InitWithMovie(Monobjc.QuickTime.QTMovie)">
            <summary>
            Creates a QTMovieLayer associated with the specified QTMovie object.
            </summary>
            <remarks>Original signature is '- (id)initWithMovie:(QTMovie *)movie'</remarks>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovieLoadState">
            <summary>
            The movie loading state.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieLoadState.QTMovieLoadStateError">
            <summary>
            an error occurred while loading the movie
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieLoadState.QTMovieLoadStateLoading">
            <summary>
            the movie is loading
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieLoadState.QTMovieLoadStateLoaded">
            <summary>
            the movie atom has loaded; it's safe to query movie properties
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieLoadState.QTMovieLoadStatePlayable">
            <summary>
            the movie has loaded enough media data to begin playing
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieLoadState.QTMovieLoadStatePlaythroughOK">
            <summary>
            the movie has loaded enough media data to play through to the end
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieLoadState.QTMovieLoadStateComplete">
            <summary>
            the movie has loaded completely
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovieOperationPhase">
            <summary>
            Describe the operation phase on a movie.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieOperationPhase.QTMovieOperationBeginPhase">
            <summary>
                <para>Describes the beginning phase.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieOperationPhase.QTMovieOperationUpdatePercentPhase">
            <summary>
                <para>Describes the update phase.</para>
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieOperationPhase.QTMovieOperationEndPhase">
            <summary>
                <para>Describes the end phase.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovieTypeOptions">
            <summary>
            File types that can be opened as QuickTime movies.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieTypeOptions.QTIncludeStillImageTypes">
            <summary>
            This value adds to the array all file types for still images that can be opened using a graphics importer.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieTypeOptions.QTIncludeTranslatableTypes">
            <summary>
            This value adds to the array all file types for files that can be opened using a movie importer but for which a new file must be created.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieTypeOptions.QTIncludeAggressiveTypes">
            <summary>
            This value adds to the array all file types for files that can be opened using a movie importer but that are not commonly used in connection with movies (for instance, text or HTML files).
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieTypeOptions.QTIncludeCommonTypes">
            <summary>
            This value adds to the array all common file types that QuickTime can open in place on the current system.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieTypeOptions.QTIncludeAllTypes">
            <summary>
            This value adds to the array all file types that QuickTime can open on the current system, using any available movie or graphics importer.
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTMovieView">
            <summary>
            Managed wrapper for QTMovieView Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.#ctor(Monobjc.Cocoa.NSRect)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (id)initWithFrame:(NSRect)frame'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMovieView" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMovieView" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTMovieView" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTMovieView.QTMovieViewClass">
            <summary>
            Static field for a quick access to the QTMovieView class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.AreStepButtonsVisible">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (BOOL)areStepButtonsVisible'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.AreZoomButtonsVisible">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (BOOL)areZoomButtonsVisible'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.ControllerBarHeight">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (float)controllerBarHeight'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.FillColor">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (NSColor *)fillColor'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.IsBackButtonVisible">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (BOOL)isBackButtonVisible'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.IsControllerVisible">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (BOOL)isControllerVisible'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.IsCustomButtonVisible">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (BOOL)isCustomButtonVisible'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.IsEditable">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (BOOL)isEditable'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.IsHotSpotButtonVisible">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (BOOL)isHotSpotButtonVisible'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.IsTranslateButtonVisible">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (BOOL)isTranslateButtonVisible'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.IsVolumeButtonVisible">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (BOOL)isVolumeButtonVisible'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.Movie">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (QTMovie *)movie'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.MovieBounds">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (NSRect)movieBounds'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.MovieControllerBounds">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (NSRect)movieControllerBounds'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTMovieView.PreservesAspectRatio">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (BOOL)preservesAspectRatio'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.Add(Monobjc.Id)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (IBAction)add:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.AddScaled(Monobjc.Id)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (IBAction)addScaled:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.Copy(Monobjc.Id)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (IBAction)copy:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.Cut(Monobjc.Id)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (IBAction)cut:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.Delete(Monobjc.Id)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (IBAction)delete:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.GotoBeginning(Monobjc.Id)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (IBAction)gotoBeginning:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.GotoEnd(Monobjc.Id)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (IBAction)gotoEnd:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.GotoNextSelectionPoint(Monobjc.Id)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (IBAction)gotoNextSelectionPoint:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.GotoPosterFrame(Monobjc.Id)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (IBAction)gotoPosterFrame:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.GotoPreviousSelectionPoint(Monobjc.Id)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (IBAction)gotoPreviousSelectionPoint:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.InitWithFrame(Monobjc.Cocoa.NSRect)">
            <summary>
                <para>Returns the current visibility state of the specified controller bar button.</para>
                <para>Original signature is '- (id)initWithFrame:(NSRect)frame'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.Paste(Monobjc.Id)">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (IBAction)paste:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.Pause(Monobjc.Id)">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (IBAction)pause:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.Play(Monobjc.Id)">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (IBAction)play:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.Replace(Monobjc.Id)">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (IBAction)replace:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.SelectAll(Monobjc.Id)">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (IBAction)selectAll:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.SelectNone(Monobjc.Id)">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (IBAction)selectNone:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.SetShowsResizeIndicator(System.Boolean)">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (void)setShowsResizeIndicator:(BOOL)show'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.SetStepButtonsVisible(System.Boolean)">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (void)setStepButtonsVisible:(BOOL)state'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.SetZoomButtonsVisible(System.Boolean)">
            <summary>
                <para>Sets the specified controller bar button to be visible or invisible, according to the state parameter.</para>
                <para>Original signature is '- (void)setZoomButtonsVisible:(BOOL)state'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.StepBackward(Monobjc.Id)">
            <summary>
                <para>Original signature is '- (IBAction)stepBackward:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.StepForward(Monobjc.Id)">
            <summary>
                <para>Original signature is '- (IBAction)stepForward:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTMovieView.Trim(Monobjc.Id)">
            <summary>
                <para>Original signature is '- (IBAction)trim:(id)sender'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTSampleBuffer">
            <summary>
            Managed wrapper for QTSampleBuffer Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTSampleBuffer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTSampleBuffer" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTSampleBuffer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTSampleBuffer" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTSampleBuffer.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTSampleBuffer" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTSampleBuffer.QTSampleBufferClass">
            <summary>
            Static field for a quick access to the QTSampleBuffer class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTSampleBuffer.DecodeTime">
            <summary>
                <para>Returns the decode time of the buffer.</para>
                <para>Original signature is '- (QTTime )decodeTime'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTSampleBuffer.Duration">
            <summary>
                <para>Returns the duration of the buffer.</para>
                <para>Original signature is '- (QTTime )duration'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTSampleBuffer.FormatDescription">
            <summary>
                <para>Returns the format description of the buffer.</para>
                <para>Original signature is '- (QTFormatDescription *)formatDescription'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTSampleBuffer.LengthForAllSamples">
            <summary>
                <para>Returns the length of the buffer returned by bytesForAllSamples.</para>
                <para>Original signature is '- (NSUInteger)lengthForAllSamples'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTSampleBuffer.NumberOfSamples">
            <summary>
                <para>Returns the number of media samples contained in the buffer.</para>
                <para>Original signature is '- (NSInteger )numberOfSamples'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTSampleBuffer.PresentationTime">
            <summary>
                <para>Returns the presentation time of the buffer.</para>
                <para>Original signature is '- (QTTime )presentationTime'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTSampleBuffer.SampleBufferAttributes">
            <summary>
                <para>Returns a dictionary of the sample buffer's current attirbutes.</para>
                <para>Original signature is '- (NSDictionary *)sampleBufferAttributes'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTSampleBuffer.SampleUseCount">
            <summary>
                <para>Returns the use count of the sample data owned by the receiver.</para>
                <para>Original signature is '- (NSUInteger)sampleUseCount'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTSampleBuffer.AttributeForKey(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns a sample buffer attribute for the given key.</para>
                <para>Original signature is '- (id)attributeForKey:(NSString *)attributeKey'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="attributeKey">The key of the returned attribute. Attribute keys are described in the Constants section.</param>
            <returns>An object for the given attribute key, or NIL if the sample buffer does not have the given attribute.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTSampleBuffer.AudioBufferListWithOptions(Monobjc.QuickTime.QTSampleBufferAudioBufferListOptions)">
            <summary>
                <para>Returns a pointer to a Core Audio AudioBufferList containing audio data owned by the receiver.</para>
                <para>Original signature is '- (AudioBufferList *)audioBufferListWithOptions:(QTSampleBufferAudioBufferListOptions)options;'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="options">A bitfield containing options that determine what kind of audio buffer list will be returned. The options constants, which can be combined using the bitwise or operator, are described as part of the QTSampleBufferAudioBufferListOptions type.</param>
            <returns>A pointer to an AudioBufferList structure. This pointer and its associated audio buffers will remain valid as long as the receiver is valid and the value returned by sampleUseCount is greater then 0.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTSampleBuffer.BytesForAllSamples">
            <summary>
                <para>Returns a pointer to the bytes of media data contained in the sample buffer.</para>
                <para>Original signature is '- (void *)bytesForAllSamples'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>A pointer to a buffer of media data.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTSampleBuffer.DecrementSampleUseCount">
            <summary>
                <para>Decrements the use count of the sample data owned by the receiver, allowing the sample data to be invalidated after a matching call to incrementSampleUseCount.</para>
                <para>Original signature is '- (void)decrementSampleUseCount'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>A QTTime representing the duration of the buffer.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTSampleBuffer.GetAudioStreamPacketDescriptionsInRange(System.IntPtr,Monobjc.Cocoa.NSRange)">
            <summary>
                <para>Gets an array of Core Audio AudioStreamPacketDescriptions describing the lengths of samples in variable bit- rate audio buffers.</para>
                <para>Original signature is '- (BOOL)getAudioStreamPacketDescriptions:(void *)audioStreamPacketDescriptions inRange:(NSRange)range'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <param name="audioStreamPacketDescriptions">An array of Core Audio AudioStreamPacketDescription structures allocated to be large enough to fit the number of packet descriptions indicated by range.</param>
            <param name="range">The range of packet descriptions to use when filling the array. If the range falls outside the number of samples returned by numberOfSamples, this method raises an NSRangeException.</param>
            <returns>If the buffer contains variable bit-rate audio, this method fills the audioStreamPacketDescriptions with AudioStreamPacketDescription structures and returns YES. If the buffer contains single bit-rate audio, this method returns NO and leaves audioStreamPacketDescriptions untouched.</returns>
        </member>
        <member name="M:Monobjc.QuickTime.QTSampleBuffer.IncrementSampleUseCount">
            <summary>
                <para>Increments the use count of the sample data owned by the receiver, preventing the sample data from being invalidated until a matching call to decrementSampleUseCount.</para>
                <para>Original signature is '- (void)incrementSampleUseCount'</para>
                <para>Mac OS X v10.5 and later.</para>
            </summary>
            <returns>The length, in bytes of the buffer returned by bytesForAllSamples.</returns>
        </member>
        <member name="T:Monobjc.QuickTime.QTSampleBufferAudioBufferListOptions">
            <summary>
            Options passed to <see cref="M:Monobjc.QuickTime.QTSampleBuffer.AudioBufferListWithOptions(Monobjc.QuickTime.QTSampleBufferAudioBufferListOptions)" />.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTSampleBufferAudioBufferListOptions.QTSampleBufferAudioBufferListOptionAssure16ByteAlignment">
            <summary>
            Assures that data will be aligned on 16 byte boundary.
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTTime">
            <summary>
            Defines the value and time scale of a time.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTTime.timeValue">
            <summary>
            The time value.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTTime.timeScale">
            <summary>
            The time scale.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTTime.flags">
            <summary>
            Time flags
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTTimeRange">
            <summary>
            Defines a range of time.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTTimeRange.time">
            <summary>
            The start time.
            </summary>
        </member>
        <member name="F:Monobjc.QuickTime.QTTimeRange.duration">
            <summary>
            The duration.
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QTTrack">
            <summary>
            Managed wrapper for QTTrack Objective-C class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.#ctor(System.IntPtr,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Removes aperture mode dimension information from the target track. It does not attempt to modify sample descriptions, so it may not completely reverse the effects of generateApertureModeDimensions. It sets the QTTrackHasApertureModeDimensionsAttribute property to NO.</para>
                <para>Original signature is '- (id)initWithQuickTimeTrack:(Track)track error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTTrack" /> class.
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTTrack" /> class.
            </summary>
            <param name="nativePointer">The native pointer.</param>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.#ctor(System.String,System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Monobjc.QuickTime.QTTrack" /> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="firstParam">The first param.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="F:Monobjc.QuickTime.QTTrack.QTTrackClass">
            <summary>
            Static field for a quick access to the QTTrack class.
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTTrack.IsEnabled">
            <summary>
                <para>Removes aperture mode dimension information from the target track. It does not attempt to modify sample descriptions, so it may not completely reverse the effects of generateApertureModeDimensions. It sets the QTTrackHasApertureModeDimensionsAttribute property to NO.</para>
                <para>Original signature is '- (BOOL)isEnabled'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTTrack.Media">
            <summary>
                <para>Removes aperture mode dimension information from the target track. It does not attempt to modify sample descriptions, so it may not completely reverse the effects of generateApertureModeDimensions. It sets the QTTrackHasApertureModeDimensionsAttribute property to NO.</para>
                <para>Original signature is '- (QTMedia *)media'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTTrack.Movie">
            <summary>
                <para>Removes aperture mode dimension information from the target track. It does not attempt to modify sample descriptions, so it may not completely reverse the effects of generateApertureModeDimensions. It sets the QTTrackHasApertureModeDimensionsAttribute property to NO.</para>
                <para>Original signature is '- (QTMovie *)movie'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTTrack.QuickTimeTrack">
            <summary>
                <para>Removes aperture mode dimension information from the target track. It does not attempt to modify sample descriptions, so it may not completely reverse the effects of generateApertureModeDimensions. It sets the QTTrackHasApertureModeDimensionsAttribute property to NO.</para>
                <para>Original signature is '-(Track)quickTimeTrack'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTTrack.TrackAttributes">
            <summary>
                <para>The following constants specify the track attributes that you can get and set using the trackAttributes and setTrackAttributes methods. To get or set a single attribute, use attributeForKey or setAttribute.</para>
                <para>Original signature is '-(NSDictionary *)trackAttributes'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="P:Monobjc.QuickTime.QTTrack.Volume">
            <summary>
                <para>The following constants specify the track attributes that you can get and set using the trackAttributes and setTrackAttributes methods. To get or set a single attribute, use attributeForKey or setAttribute.</para>
                <para>Original signature is '-(float)volume'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.TrackWithQuickTimeTrackError(System.IntPtr,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Creates a QTTrack object with data from the QuickTime track track.</para>
                <para>Original signature is '+ (id)trackWithQuickTimeTrack:(Track)track error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.AddImageForDurationWithAttributes(Monobjc.Cocoa.NSImage,Monobjc.QuickTime.QTTime,Monobjc.Cocoa.NSDictionary)">
            <summary>
                <para>Returns an NSSize value that indicates the dimensions of the target track for the specified movie aperture mode. For instance, passing a mode of QTMovieApertureModeClean would cause apertureModeDimensionsForMode: to return the track dimensions to use in clean aperture mode.</para>
                <para>Original signature is '- (void)addImage:(NSImage *)image forDuration:( QTTime)duration withAttributes:(NSDictionary *)attributes'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.ApertureModeDimensionsForMode(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Returns an NSSize value that indicates the dimensions of the target track for the specified movie aperture mode. For instance, passing a mode of QTMovieApertureModeClean would cause apertureModeDimensionsForMode: to return the track dimensions to use in clean aperture mode.</para>
                <para>Original signature is '- (NSSize)apertureModeDimensionsForMode:(NSString *)mode'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.AttributeForKey(Monobjc.Cocoa.NSString)">
            <summary>
                <para>Adds information to a QTTrack needed to support aperture modes for tracks created with applications and/or versions of QuickTime that did not support aperture mode dimensions. If the image descriptions in the track lack tags describing clean aperture and pixel aspect ratio information, the media data is scanned to see if the correct values can be divined and attached. Then the aperture mode dimensions are calculated and set. Afterwards, the QTTrackHasApertureModeDimensionsAttribute property will be set to YES for this track. Tracks that do not support aperture modes are not changed.</para>
                <para>Original signature is '-(id)attributeForKey:(NSString *)attributeKey'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.DeleteSegment(Monobjc.QuickTime.QTTimeRange)">
            <summary>
                <para>Adds information to a QTTrack needed to support aperture modes for tracks created with applications and/or versions of QuickTime that did not support aperture mode dimensions. If the image descriptions in the track lack tags describing clean aperture and pixel aspect ratio information, the media data is scanned to see if the correct values can be divined and attached. Then the aperture mode dimensions are calculated and set. Afterwards, the QTTrackHasApertureModeDimensionsAttribute property will be set to YES for this track. Tracks that do not support aperture modes are not changed.</para>
                <para>Original signature is '- (void)deleteSegment:(QTTimeRange)segment'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.GenerateApertureModeDimensions">
            <summary>
                <para>Adds information to a QTTrack needed to support aperture modes for tracks created with applications and/or versions of QuickTime that did not support aperture mode dimensions. If the image descriptions in the track lack tags describing clean aperture and pixel aspect ratio information, the media data is scanned to see if the correct values can be divined and attached. Then the aperture mode dimensions are calculated and set. Afterwards, the QTTrackHasApertureModeDimensionsAttribute property will be set to YES for this track. Tracks that do not support aperture modes are not changed.</para>
                <para>Original signature is '- (void)generateApertureModeDimensions'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.InitWithQuickTimeTrackError(System.IntPtr,Monobjc.Cocoa.NSError@)">
            <summary>
                <para>Removes aperture mode dimension information from the target track. It does not attempt to modify sample descriptions, so it may not completely reverse the effects of generateApertureModeDimensions. It sets the QTTrackHasApertureModeDimensionsAttribute property to NO.</para>
                <para>Original signature is '- (id)initWithQuickTimeTrack:(Track)track error:(NSError **)errorPtr'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.InsertEmptySegmentAt(Monobjc.QuickTime.QTTimeRange)">
            <summary>
                <para>Removes aperture mode dimension information from the target track. It does not attempt to modify sample descriptions, so it may not completely reverse the effects of generateApertureModeDimensions. It sets the QTTrackHasApertureModeDimensionsAttribute property to NO.</para>
                <para>Original signature is '- (void)insertEmptySegmentAt:(QTTimeRange)range'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.InsertSegmentOfTrackFromRangeScaledToRange(Monobjc.QuickTime.QTTrack,Monobjc.QuickTime.QTTimeRange,Monobjc.QuickTime.QTTimeRange)">
            <summary>
                <para>Removes aperture mode dimension information from the target track. It does not attempt to modify sample descriptions, so it may not completely reverse the effects of generateApertureModeDimensions. It sets the QTTrackHasApertureModeDimensionsAttribute property to NO.</para>
                <para>Original signature is '- (void)insertSegmentOfTrack:(QTTrack *)track fromRange:(QTTimeRange)srcRange scaledToRange:(QTTimeRange)dstRange'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.InsertSegmentOfTrackTimeRangeAtTime(Monobjc.QuickTime.QTTrack,Monobjc.QuickTime.QTTimeRange,Monobjc.QuickTime.QTTime)">
            <summary>
                <para>Removes aperture mode dimension information from the target track. It does not attempt to modify sample descriptions, so it may not completely reverse the effects of generateApertureModeDimensions. It sets the QTTrackHasApertureModeDimensionsAttribute property to NO.</para>
                <para>Original signature is '- (void)insertSegmentOfTrack:(QTTrack *)track timeRange:(QTTimeRange)range atTime:(QTTime )time'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.RemoveApertureModeDimensions">
            <summary>
                <para>Removes aperture mode dimension information from the target track. It does not attempt to modify sample descriptions, so it may not completely reverse the effects of generateApertureModeDimensions. It sets the QTTrackHasApertureModeDimensionsAttribute property to NO.</para>
                <para>Original signature is '- (void)removeApertureModeDimensions'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.ScaleSegmentNewDuration(Monobjc.QuickTime.QTTimeRange,Monobjc.QuickTime.QTTime)">
            <summary>
                <para>Sets the dimensions of the target track for the specified movie aperture mode.</para>
                <para>Original signature is '- (void)scaleSegment:(QTTimeRange)segment newDuration:( QTTime)newDuration'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.SetApertureModeDimensionsForMode(Monobjc.Cocoa.NSSize,Monobjc.Cocoa.NSString)">
            <summary>
                <para>Sets the dimensions of the target track for the specified movie aperture mode.</para>
                <para>Original signature is '- (void)setApertureModeDimensions:(NSSize)dimensions forMode:(NSString *)mode'</para>
                <para>Available in Mac OS X v10.5 and later.</para>
            </summary>
        </member>
        <member name="M:Monobjc.QuickTime.QTTrack.SetAttributeForKey(Monobjc.Id,Monobjc.Cocoa.NSString)">
            <summary>
                <para>The following constants specify the track attributes that you can get and set using the trackAttributes and setTrackAttributes methods. To get or set a single attribute, use attributeForKey or setAttribute.</para>
                <para>Original signature is '-(void)setAttribute:(id)value forKey:(NSString *)attributeKey'</para>
                <para>Available in Mac OS X v10.3 and later.</para>
            </summary>
        </member>
        <member name="T:Monobjc.QuickTime.QuickTimeFramework">
            <summary>
            Utility class to access QuickTime framework.
            </summary>
        </member>
    </members>
</doc>
